library("sp")
library("metabarTOAD")
library("vegan")
library("Biostrings")
library("RColorBrewer")
library("seqinr")
library("sp")
#### Settin
#### Settings and Setup####
##Get metadata
metadat <- read.csv("metadata.csv")
metadat.site <- read.csv("metadata.site.csv")
#Set some variables
minreads <- 3
items <- NULL
#Set the seed
set.seed("123456")
palette(brewer.pal(12, "Set3"))
View(metadat.site)
#Change the location to sensible numbers
coords <- "43°46′50″N 79°24′53″W" "43°46′06″N 79°24′46″W"
#Change the location to sensible numbers
coords <- c("43°46′50″N 79°24′53″W","43°46′06″N 79°24′46″W")
chd = substr(coords, 3, 3)[1]
chm = substr(coords, 6, 6)[1]
chs = substr(coords, 9, 9)[1]
cd = char2dms(coords,chd=chd,chm=chm,chs=chs)
View(cd)
View(cd)
substr(coords, 3, 3)
as.numeric(cd)
View(cd)
View(cd)
cd = char2dms(coords[1],chd=chd,chm=chm,chs=chs)
as.numeric(cd)
cd
coords[1]
View(cd)
?char2dms
coords[1]
coords <- c("43°46′50″N","79°24′53″W")
chd = substr(coords, 3, 3)[1]
chm = substr(coords, 6, 6)[1]
chs = substr(coords, 9, 9)[1]
cd = char2dms(coords[1],chd=chd,chm=chm,chs=chs)
as.numeric(cd)
cd = char2dms(coords[2],chd=chd,chm=chm,chs=chs)
as.numeric(cd)
View(metadat.site)
chd
chm
chs
convertLatLon<- function(Lat,Lon){
lat = char2dms(Lat,chd="°",chm="′",chs="″")
lon = char2dms(Lon,chd="°",chm="′",chs="″")
return(lat,lon)}
coords <- c("43°46′50″N","79°24′53″W")
convertLatLon(coords[1],coords[2])
coords[1]
convertLatLon(Lat=coords[1],Lon=coords[2])
convertLatLon<- function(Lat,Lon){
lat = char2dms(Lat,chd="°",chm="′",chs="″")
lon = char2dms(Lon,chd="°",chm="′",chs="″")
return(c(lat,lon))}
convertLatLon(Lat=coords[1],Lon=coords[2])
convertLatLon<- function(Lat,Lon){
lat = char2dms(Lat,chd="°",chm="′",chs="″")
lon = char2dms(Lon,chd="°",chm="′",chs="″")
return(unlist(c(lat,lon)))}
convertLatLon(Lat=coords[1],Lon=coords[2])
library("metabarTOAD")
library("vegan")
library("Biostrings")
library("RColorBrewer")
library("seqinr")
library("sp")
#### Settings and Setup####
##Get metadata
metadat <- read.csv("metadata.csv")
metadat.site <- read.csv("metadata.site.csv")
#Set some variables
minreads <- 3
items <- NULL
#Set the seed
set.seed("123456")
palette(brewer.pal(12, "Set3"))
#Change the location to sensible numbers
coords <- c("43°46′50″N 79°24′53″W","43°46′06″N 79°24′46″W")
coords <- c("43°46′50″N","79°24′53″W")
chd = substr(coords, 3, 3)[1]
chm = substr(coords, 6, 6)[1]
chs = substr(coords, 9, 9)[1]
convertLatLon<- function(Lat,Lon){
lat = char2dms(Lat,chd="°",chm="′",chs="″")
lon = char2dms(Lon,chd="°",chm="′",chs="″")
return(unlist(c(lat,lon)))}
convertLatLon(Lat=coords[1],Lon=coords[2])
convertLatLon<- function(Lat,Lon){
lat = char2dms(Lat,chd="°",chm="′",chs="″")
lon = char2dms(Lon,chd="°",chm="′",chs="″")
return(unlist(c(as.numeric(lat),as.numeric(lon))))}
convertLatLon(Lat=coords[1],Lon=coords[2])
convertLatLon<- function(in){
convertLatLon<- function(input){
out = char2dms(input,chd="°",chm="′",chs="″")
return(as.numeric(out))}
convertLatLon(Lat=coords[1])
convertLatLon(coords[1])
View(metadat.site)
metadat.site$latitude
metadat.site$latitude[1]
convertLatLon<- function(input){
out = char2dms(input,chd="°",chm=",",chs="′")
return(as.numeric(out))}
convertLatLon(metadat.site$latitude[1])
?char2dms
gsub(". ([0-9].*`)","//1",metadat.site$latitude[1])
gsub(". /([0-9].*`/)","//1",metadat.site$latitude[1])
gsub("\($.\) .*","//1",metadat.site$latitude[1])
gsub("($.) .*","//1",metadat.site$latitude[1])
gsub(". ([0-9].*`)","/1",metadat.site$latitude[1])
gsub(". /([0-9].*`/)","/1",metadat.site$latitude[1])
gsub(". /([0-9].*$/)","/1",metadat.site$latitude[1])
gsub(". /([0-9].*$/)","lol",metadat.site$latitude[1])
gsub("01","lol",metadat.site$latitude[1])
gsub("01","lol",metadat.site$latitude[1])
gsub(". /([0-9].*$/)","lol",metadat.site$latitude[1])
gsub("\(^.\) /([0-9].*$/)","lol",metadat.site$latitude[1])
gsub("/(^./) /([0-9].*$/)","lol",metadat.site$latitude[1])
gsub("/($.)/ .*","//1",metadat.site$latitude[1])
gsub("/($.)/ .*","\1",metadat.site$latitude[1])
gsub("/($.)/ .","\1",metadat.site$latitude[1])
gsub("/($.)/ .*","\1",metadat.site$latitude[1])
gsub("/(s)/ .*","\1",metadat.site$latitude[1])
gsub("/(S)/ .*","\1",metadat.site$latitude[1])
gsub("/(^S)/ .*","\1",metadat.site$latitude[1])
substr(metadat.site$latitude[1],1,2)
substr(metadat.site$latitude[1],1,1)
c(substr(metadat.site$latitude[1],3,9),
substr(metadat.site$latitude[1],1,1))
c(substr(metadat.site$latitude[1],3,10),
substr(metadat.site$latitude[1],1,1))
metadat.site$latitude[1]
paste(substr(metadat.site$latitude[1],3,12),
substr(metadat.site$latitude[1],1,1),sep=" ")
convertLatLon(
paste(substr(metadat.site$latitude[1],3,12),
substr(metadat.site$latitude[1],1,1),sep=" ")
)
convertLatLon(
paste0(substr(metadat.site$latitude[1],3,12),
substr(metadat.site$latitude[1],1,1))
)
paste0(substr(metadat.site$latitude[1],3,12),
substr(metadat.site$latitude[1],1,1))
char2dms(paste0(substr(metadat.site$latitude[1],3,12),
substr(metadat.site$latitude[1],1,1)))
char2dms(input,chd="°",chm=",",chs="′")
char2dms(paste0(substr(metadat.site$latitude[1],3,12),
substr(metadat.site$latitude[1],1,1)),
,chd="°",chm=",",chs="′")
paste0(substr(metadat.site$latitude[1],3,12),
substr(metadat.site$latitude[1],1,1))
char2dms("01º02,325´S",chd="°",chm=",",chs="′")
char2dms("01º02,325´S",chd="°",chm=",",chs="`")
char2dms("43°46′50″N",chd="°",chm="′",chs="″")
char2dms("01º02,325´S",chd="º",chm=",",chs="`")
View(metadat.site)
char2dms("01º02,325´S",chd="º",chm=",",chs="´")
convertLatLon<- function(input){
out = char2dms(input,chd="º",chm=",",chs="´")
return(as.numeric(out))}
convertLatLon(
paste0(substr(metadat.site$latitude[1],3,12),
substr(metadat.site$latitude[1],1,1))
)
paste0(substr(metadat.site$latitude[1],3,12),
substr(metadat.site$latitude[1],1,1)
)
paste0(substr(metadat.site$latitude[1],3,12),
substr(metadat.site$latitude[1],1,1))
char2dms("01º02,325´S",chd="º",chm=",",chs="´")
as.numeric(char2dms("01º02,325´S",chd="º",chm=",",chs="´"))
convertLatLon(
paste0(substr(metadat.site$latitude,3,12),
substr(metadat.site$latitude,1,1))
)
View(metadat.site)
#convert the lats
convertLatLon(paste0(substr(metadat.site$latitude,3,12),
substr(metadat.site$latitude,1,1)))
#convert the lats
metadat.site$lat2 <-convertLatLon(paste0(substr(metadat.site$latitude,3,12),
substr(metadat.site$latitude,1,1)))
metadat.site$lon2 <-convertLatLon(paste0(substr(metadat.site$longitude,3,12),
substr(metadat.site$longitude,1,1)))
View(metadat.site)
paste0(substr(metadat.site$longitude,3,12),
substr(metadat.site$longitude,1,1)
)
gsub(",",".",paste0(substr(metadat.site$longitude,3,12),
substr(metadat.site$longitude,1,1)))
# a little function that uses char2dms from sp
convertLatLon<- function(input){
out = char2dms(input,chd="º",chm=",",chs="")
return(as.numeric(out))}
convertLatLon(gsub(",",".",paste0(substr(metadat.site$longitude,3,12),
+        substr(metadat.site$longitude,1,1))))
gsub(",",".",paste0(substr(metadat.site$longitude,3,12),
+        substr(metadat.site$longitude,1,1)))
gsub(",",".",paste0(substr(metadat.site$longitude,3,12),
+        substr(metadat.site$longitude,1,1)))
as.numeric(char2dms("01º02.325S,",chd="º",chm=",",chs=""))
library("metabarTOAD")
library("metabarTOAD")
library("vegan")
library("Biostrings")
library("RColorBrewer")
library("seqinr")
library("sp")
#### Settings and Setup####
##Get metadata
metadat <- read.csv("metadata.csv")
metadat.site <- read.csv("metadata.site.csv")
#Set some variables
minreads <- 3
items <- NULL
#Set the seed
set.seed("123456")
palette(brewer.pal(12, "Set3"))
View(metadat.site)
paste0(substr(metadat.site$latitude,3,12),
substr(metadat.site$latitude,1,1))
View(metadat.site)
substr(metadat.site$latitude,3,5)
substr(metadat.site$latitude,3,4)
paste0("-",substr(metadat.site$latitude,3,12),
substr(metadat.site$latitude,1,1))
substr(metadat.site$latitude,6,5)
substr(metadat.site$latitude,6,7)
paste0(substr(metadat.site$latitude,6,7),".",substr(metadat.site$latitude,9,11))
as.numeric(paste0(substr(metadat.site$latitude,6,7),".",substr(metadat.site$latitude,9,11)))
as.numeric(paste0(substr(metadat.site$latitude,6,7),".",substr(metadat.site$latitude,9,11)))/60
paste0("-",substr(metadat.site$latitude,3,12))
paste0("-",substr(metadat.site$latitude,3,4))
as.numeric(paste0("-",substr(metadat.site$latitude,3,4)))
as.numeric(paste0("-",substr(metadat.site$latitude,3,4)))+as.numeric(paste0(substr(metadat.site$latitude,6,7),".",substr(metadat.site$latitude,9,11)))/60
as.numeric(paste0("-",substr(metadat.site$latitude,3,4)))+
as.numeric(paste0(substr(metadat.site$latitude,6,7),".",substr(metadat.site$latitude,9,11)))/60
as.numeric(paste0("-",substr(metadat.site$latitude,3,4)))+
as.numeric(paste0(substr(metadat.site$latitude,6,7),".",substr(metadat.site$latitude,9,11)))/60
paste0("-",substr(metadat.site$latitude,3,4)))
paste0("-",substr(metadat.site$latitude,3,4))
meric(
as.numeric(paste0(substr(metadat.site$latitude,6,7),".",substr(metadat.site$latitude,9,11)))/60
as.numeric(paste0(substr(metadat.site$latitude,6,7),".",substr(metadat.site$latitude,9,11)))/60)
as.numeric(paste0(substr(metadat.site$latitude,6,7),".",substr(metadat.site$latitude,9,11)))/60
as.character(as.numeric(paste0(substr(metadat.site$latitude,6,7),".",substr(metadat.site$latitude,9,11)))/60)
?as.character
as.character(as.numeric(paste0(substr(metadat.site$latitude,6,7),".",substr(metadat.site$latitude,9,11)))/60,length=10)
as.character(as.numeric(paste0(substr(metadat.site$latitude,6,7),".",substr(metadat.site$latitude,9,11)))/60)
substr(as.character(as.numeric(paste0(substr(metadat.site$latitude,6,7),".",substr(metadat.site$latitude,9,11)))/60),3,10)
substr(as.character(as.numeric(paste0(substr(metadat.site$latitude,6,7),".",substr(metadat.site$latitude,9,11)))/60),3,20)
paste0("-",substr(metadat.site$latitude,3,4))
paste0("-",substr(metadat.site$latitude,3,4),".",substr(as.character(as.numeric(paste0(substr(metadat.site$latitude,6,7),".",substr(metadat.site$latitude,9,11)))/60),3,20))
paste0("-",substr(metadat.site$latitude,3,4),".",substr(as.character(as.numeric(paste0(substr(metadat.site$latitude,6,7),".",substr(metadat.site$latitude,9,11)))/60),3,20))
as.numeric(paste0("-",substr(metadat.site$latitude,3,4),".",substr(as.character(as.numeric(paste0(substr(metadat.site$latitude,6,7),".",substr(metadat.site$latitude,9,11)))/60),3,20)))
metadat.site$lat2 <- as.numeric(paste0("-",substr(metadat.site$latitude,3,4),".",substr(as.character(as.numeric(paste0(substr(metadat.site$latitude,6,7),".",substr(metadat.site$latitude,9,11)))/60),3,20)))
View(metadat)
View(metadat.site)
metadat.site$lon2 <- as.numeric(paste0("-",substr(metadat.site$longitude,3,4),".",substr(as.character(as.numeric(paste0(substr(metadat.site$longitude,6,7),".",substr(metadat.site$latitude,9,11)))/60),3,20)))
substr(metadat.site$longitude,3,4)
View(metadat.site)
substr(metadat.site$longitude,4,5)
metadat.site$longitude,7,8
substr(metadat.site$longitude,7,8)
View(metadat.site)
substr(metadat.site$longitude,8,9)
View(metadat.site)
substr(metadat.site$latitude,11,13)
View(metadat.site)
substr(metadat.site$longitude,11,13)
View(metadat.site)
as.numeric(paste0("-",substr(metadat.site$longitude,4,5),".",substr(as.character(as.numeric(paste0(substr(metadat.site$longitude,8,9),".",substr(metadat.site$longitude,11,13)))/60),3,20)))
View(metadat.site)
metadat.site$lon2 <- as.numeric(paste0("-",substr(metadat.site$longitude,4,5),".",substr(as.character(as.numeric(paste0(substr(metadat.site$longitude,8,9),".",substr(metadat.site$longitude,11,13)))/60),3,20)))
View(metadat.site)
##
## 1. Set up
##
## -- call to core functionality -- ##
# packages for core functionality
library(magrittr)
library(dplyr)
library(tidyr)
# functionality for spatial analyses
library(raster)
library(rgdal)
library(sf)
library(rgeos)
# call to additional functionality
library(viridis)
library(gdistance)
# set utm details
utm_details <-
paste0("+proj=utm +zone=15 +south +datum=WGS84 +units=m",
" +no_defs +ellps=WGS84") %>% CRS()
# set data locale     ## -- will need to change for local copy -- ##
data_locale <- "galcosta/"
# call to coastline
galcosta <-
paste0(data_locale, "galcosta.shp") %>%
st_read()
getwd
getwd()
# call to coastline
galcosta <-
paste0(data_locale, "galcosta.shp") %>%
st_read()
setwd("FranzAnalysis/")
# call to coastline
galcosta <-
paste0("galcosta.shp") %>%
st_read()
# call to coastline
galcosta <-
paste0(data_locale,"galcosta.shp") %>%
st_read()
##
## 2. Subset domain
##
# set zoom for platform
pzoom <-
c(750000,
820000,
9935000 - 2.1E4,
9975000 + 1.1E4) %>%
extent()
# constrain the problem
plataforma <-
galcosta %>% st_crop(pzoom)
?st_crop
View(pzoom)
?extent
|>
## -- have a quick look -- ##
# open window
quartz("view platform", 10, 10)
# visualise
plataforma %>% dplyr::select(ID) %>% plot()
View(plataforma)
##
## 3. Create cost layer
##
# set scale factor
scale_factor <- 100
# create empty raster
empty_raster <-
raster(resolution = scale_factor,
xmn  = pzoom[1],
xmx  = pzoom[2],
ymn  = pzoom[3],
ymx  = pzoom[4],
crs  = utm_details)
# convert to raster
galcosta_r <-
plataforma %>%
st_geometry() %>%
as("Spatial") %>%
rasterize(empty_raster)
# set arbitrary values for land & sea
galcosta_r[galcosta_r > 0] <- 2
galcosta_r[galcosta_r %>% is.na()] <- 1
## -- have a quick look -- ##
# open window
quartz("view platform", 5, 5)
# visualise
galcosta_r %>% plot(col = c("white", "grey70"))
?coordinates
data(meuse.grid)
View(meuse.grid)
coordinates(meuse.grid) <- ~x+y
View(meuse.grid)
test <- metadat.site
View(metadat.site)
coordinates(test) <- ~lon2+lat2
View(test)
?st_as_sf
View(galcosta)
metadat.site$lat2
c(metadat.site$lat2,metadat.site$lon2)
paste(metadat.site$lat2,metadat.site$lon2)
paste(metadat.site$lat2,metadat.site$lon2)
mp <- st_multipoint(paste(metadat.site$lat2,metadat.site$lon2))
rbind(c(3.2,4), c(3,4.6), c(3.8,4.4), c(3.5,3.8), c(3.4,3.6), c(3.9,4.5))
mp <- st_multipoint(cbind(metadat.site$lat2,metadat.site$lon2))
# visualise
plataforma %>% dplyr::select(ID) %>% plot()
plot(mp)
# visualise
plataforma %>% dplyr::select(ID) %>% plot()
points(rbind(mp)
)
