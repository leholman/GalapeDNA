plot(nMDS.resist,type = "t",main="Resistance")
# mantel
mantel.rtest(vegdist(t(fishdatSite),method="jaccard",binary=TRUE),geographicDistance, nrepet = 9999)
# Partial mantel
mantel.partial(vegdist(t(fishdatSite),method="jaccard",binary=TRUE),oceanResistance,geographicDistance, permutations = 999999,parallel = 8)
########### check out melted distance matrix comparisons
geographicDistance.pair <- melt(as.matrix(geographicDistance),varnames = c("Start","End"))
oceanResistance.pair <- melt(as.matrix(oceanResistance),varnames = c("Start","End"))
eDNAdistance.pair <- melt(as.matrix(vegdist(t(fishdatSite),method="jaccard",binary=TRUE)),varnames = c("Start","End"))
#Check the values using this plot - are they in the right order?
plot(1:529,match(paste(eDNAdistance.pair$Start,eDNAdistance.pair$End),
paste(oceanResistance.pair$Start,oceanResistance.pair$End)))
par(mfrow=c(1,3))
plot(geographicDistance.pair$value,oceanResistance.pair$value)
plot(geographicDistance.pair$value,eDNAdistance.pair$value)
plot(oceanResistance.pair$value,eDNAdistance.pair$value)
compDat <- data.frame("eDNA"=eDNAdistance.pair$value,"GeoDist"=geographicDistance.pair$value,"OceanResist"=oceanResistance.pair$value)
test <- compDat[!compDat$eDNA==0,]
par(mfrow=c(1,3))
plot(test$GeoDist,test$OceanResist)
plot(test$GeoDist,test$eDNA)
plot(test$OceanResist,test$eDNA)
summary(lm(test$eDNA~test$GeoDist+test$OceanResist,))
summary(lm(test$eDNA~test$GeoDist*test$OceanResist,))
summary(lm(test$eDNA~test$GeoDist+test$OceanResist,))
library("vegan")
library("ade4")
library("RColorBrewer")
library("reshape2")
#Set the seed
set.seed("123456")
palette(brewer.pal(12, "Set3"))
####====1.0 Pull in Data ====####
#Fish first
fishAll <- read.csv("cleandata/Cleaned_Fish_wTAX.csv",row.names=1)
fishAssign <- fishAll[,70:86]
fishdat <- fishAll[,1:69]
#Pull out site information
sites <- unlist(lapply(strsplit(colnames(fishdat),"\\."), `[[`, 1))
#Get the metadata
metadat <- read.csv("metadata.csv")
metadatSites <- read.csv("metadata.site.out.csv",row.names=1)
#Make a dataset across sites with mean values
fishdatSite <- as.data.frame(matrix(ncol=length(unique(sites)),nrow=dim(fishdat[1])))
colnames(fishdatSite) <- unique(sites)
rownames(fishdatSite) <- rownames(fishdat)
for (column in colnames(fishdatSite)){
running <- fishdat[,sites==column]
fishdatSite[,colnames(fishdatSite)==column] <- rowSums(running)/3
}
## pull in distance measures
siteDist <- as.matrix(read.csv("distanceData/SiteDistanceMatrix.csv",row.names = 1))
oceanResistance <- as.matrix(read.csv("distanceData/OceanogrphicResistanceMatrix.csv",row.names = 1))
# pull the data in
particle <- read.csv("ParticleTracking/TrialStats.csv")
####====2.0 Plotting basic alpha /beta metrics ====####
# by isalnds
fishdatB <- fishdatSite
fishdatB[fishdatB>0] <- 1
fishAlpha <- data.frame("ID"=names(fishdatB),"Richness"= colSums(fishdatB))
pdf("figures/FishRichness.pdf",height = 5,width = 6)
par(mar=c(6.1, 4.1, 2.1, 2.1))
plot(as.numeric(as.factor(metadatSites$island[match(fishAlpha$ID,metadatSites$SiteID)])),fishAlpha$Richness,
col=as.numeric(as.factor(metadatSites$island[match(fishAlpha$ID,metadatSites$SiteID)])),
pch=16,
cex=2.5,
ylab="ASV Richness",
xlab="",
xaxt='n'
)
axis(1,at=1:12,labels=levels(as.factor(metadatSites$island[match(fishAlpha$ID,metadatSites$SiteID)])),cex=0.2,las=2)
dev.off()
#by ecoregion
pdf("figures/FishRichness.ecoregion.pdf",height = 5,width = 6)
par(mar=c(6.1, 4.1, 2.1, 2.1))
plot(as.numeric(as.factor(metadatSites$EcoRegion[match(fishAlpha$ID,metadatSites$SiteID)])),fishAlpha$Richness,
col=as.numeric(as.factor(metadatSites$EcoRegion[match(fishAlpha$ID,metadatSites$SiteID)])),
pch=16,
cex=2.5,
ylab="ASV Richness",
xlab="",
xaxt='n'
)
axis(1,at=1:4,labels=levels(as.factor(metadatSites$EcoRegion[match(fishAlpha$ID,metadatSites$SiteID)])),cex=0.2,las=2)
dev.off()
#Now a beta diversity plot
pdf("figures/FishBetaDiv.pdf",height = 5,width = 6)
par(mar=c(2.1, 2.1, 2.1, 2.1))
nMDS <- metaMDS(vegdist(t(fishdat),method="jaccard",binary=TRUE),trymax=500)
plot(nMDS$points[,1],nMDS$points[,2],
pch=16,
cex=1.5,
col=as.numeric(as.factor(metadatSites$island[match(sites,metadatSites$SiteID)])),
main="",
ylab="",xlab="")
ordihull(nMDS,groups = sites,col = "grey71",draw = "polygon",lty=0)
points(nMDS$points[,1],nMDS$points[,2],pch=16,cex=1.5,
col=as.numeric(as.factor(metadatSites$island[match(sites,metadatSites$SiteID)])))
dev.off()
pdf("figures/FishBetaDivEcoRegions1.pdf",height = 5,width = 6)
par(mar=c(2.1, 2.1, 2.1, 2.1))
nMDS <- metaMDS(vegdist(t(fishdat),method="jaccard",binary=TRUE),trymax=500,k=2)
plot(nMDS$points[,1],nMDS$points[,2],
pch=16,
cex=1.5,
col=as.numeric(as.factor(metadatSites$EcoRegion[match(sites,metadatSites$SiteID)])),
main="",
ylab="",xlab="")
ordihull(nMDS,groups = sites,col = "grey71",draw = "polygon",lty=0)
points(nMDS$points[,1],nMDS$points[,2],pch=16,cex=1.5,
col=as.numeric(as.factor(metadatSites$EcoRegion[match(sites,metadatSites$SiteID)])))
text(nMDS$points[,1],nMDS$points[,2],labels=colnames(fishdat),cex=0.3)
dev.off()
### Can we formally test for ecoregion and if it drops out of the analysis?
groups0 <- sapply(strsplit(colnames(fishdat),"\\."),"[",1)
#Groups 1 as ecoregions
groups1 <- metadatSites$EcoRegion[match(groups0,metadatSites$SiteID)]
#Groups 2 w/ RED as Northern
groups2 <- groups1
groups2[groups0=="RED"]<-"Northern"
#ius the variance between ecoregions similar? -  lets run a PERMdisp
fishbetadisp <- betadisper(vegdist(t(fishdat), "jaccard",binary=TRUE),groups1)
anova(fishbetadisp)
#Sig difference in multivariate homogeneity - probably due to different numbers of samples
#Is there a sig diff in PERMANOVA between ecoregions?
adonis2(vegdist(t(fishdat), "jaccard",binary=TRUE)~groups2,permutations = 1000)
##Another little plot after the PERM findings
pdf("figures/FishBetaDivEcoRegions2.pdf",height = 5,width = 6)
par(mar=c(2.1, 2.1, 2.1, 2.1))
nMDS <- metaMDS(vegdist(t(fishdat),method="jaccard",binary=TRUE),trymax=500)
plot(nMDS$points[,1],nMDS$points[,2],
pch=16,
cex=1.5,
main="",
col=as.numeric(as.factor(groups2)),
ylab="",xlab="")
ordihull(nMDS,groups = sites,col = "grey71",draw = "polygon",lty=0)
points(nMDS$points[,1],nMDS$points[,2],pch=16,cex=1.5,
col=as.numeric(as.factor(groups2)))
text(nMDS$points[,1],nMDS$points[,2],labels=colnames(fishdat),cex=0.3)
dev.off()
####====3.0 ====####
## 3.1 Can we link biodiversity patterns to particle release parameters?
# Make some data
particle3 <- particle[particle$day=="-3",]
particle3o <- particle3[match(fishAlpha$ID,particle3$site),]
# Let's start with alpha diversity
pdf("figures/FishRichnessToOceanography.pdf",width =9,height=7)
par(mfrow=c(2,2))
par(mar=c(4.1, 4.1, 2.1, 1.1))
plot(particle3o$mean_spread,
fishAlpha$Richness,
ylab="Fish Richness",
xlab="Average Spread of Particles from Mean (Km)",
col=as.numeric(as.factor(metadatSites$island[match(fishAlpha$ID,metadatSites$SiteID)])),pch=16,cex=2.5)
plot(particle3o$mean_dist,
fishAlpha$Richness,
ylab="Fish Richness",
xlab="Distance of Particle Centroid from Sampling Site (Km)",
col=as.numeric(as.factor(metadatSites$island[match(fishAlpha$ID,metadatSites$SiteID)])),pch=16,cex=2.5)
plot(particle3o$area..km.,
fishAlpha$Richness,
ylab="Fish Richness",
xlab="Surface Area of Particles (Km)",
col=as.numeric(as.factor(metadatSites$island[match(fishAlpha$ID,metadatSites$SiteID)])),pch=16,cex=2.5)
plot(particle3o$ave_dist,
fishAlpha$Richness,
ylab="Fish Richness",
xlab="Average Distance of Particles From Sampling Point (Km)",
col=as.numeric(as.factor(metadatSites$island[match(fishAlpha$ID,metadatSites$SiteID)])),pch=16,cex=2.5)
dev.off()
#stats (none sig)
summary(lm(fishAlpha$Richness~particle3o$mean_spread))
summary(lm(fishAlpha$Richness~particle3o$ave_dist))
summary(lm(fishAlpha$Richness~particle3o$area..km.))
summary(lm(fishAlpha$Richness~particle3o$mean_dist))
# Now beta diversity with a distance based redundancy analysis
m1 <- dbrda(vegdist(t(fishdatSite),method="jaccard",binary=TRUE)~particle3o$mean_spread+
particle3o$ave_dist+
particle3o$area..km.+
particle3o$mean_dist)
plot(m1)
anova(m1,permutations = 10000)
anova(m1,by="margin",permutations = 10000)
RsquareAdj(m1)
# Overall little to no variation in fish communities can be explained by particle spread statistics
## 3.2 Can we link beta diversity to distance
#Is there a correlation between biodiversity measure distance & oceanographic distance after geographic distance is accounted for?
# First let's look at the data
geographicDistance <- as.dist(as.matrix(read.csv("distanceData/SiteDistanceMatrix.csv",row.names = 1)))
oceanResistance <- as.dist(as.matrix(read.csv("distanceData/OceanogrphicResistanceMatrix.csv",row.names = 1)))
nMDS.eDNA <- metaMDS(vegdist(t(fishdatSite),method="jaccard",binary=TRUE),trymax=500)
nMDS.dist <- metaMDS(geographicDistance,trymax=500)
nMDS.resist <- metaMDS(oceanResistance,trymax=500)
par(mfrow=c(1,3))
plot(nMDS.eDNA,type = "t",main="eDNA")
plot(nMDS.dist,type = "t",main="Distance")
plot(nMDS.resist,type = "t",main="Resistance")
# mantel
mantel.rtest(vegdist(t(fishdatSite),method="jaccard",binary=TRUE),geographicDistance, nrepet = 9999)
# Partial mantel
mantel.partial(vegdist(t(fishdatSite),method="jaccard",binary=TRUE),oceanResistance,geographicDistance, permutations = 999999,parallel = 8)
########### check out melted distance matrix comparisons
geographicDistance.pair <- melt(as.matrix(geographicDistance),varnames = c("Start","End"))
oceanResistance.pair <- melt(as.matrix(oceanResistance),varnames = c("Start","End"))
eDNAdistance.pair <- melt(as.matrix(vegdist(t(fishdatSite),method="jaccard",binary=TRUE)),varnames = c("Start","End"))
#Check the values using this plot - are they in the right order?
plot(1:529,match(paste(eDNAdistance.pair$Start,eDNAdistance.pair$End),
paste(oceanResistance.pair$Start,oceanResistance.pair$End)))
par(mfrow=c(1,3))
plot(geographicDistance.pair$value,oceanResistance.pair$value)
plot(geographicDistance.pair$value,eDNAdistance.pair$value)
plot(oceanResistance.pair$value,eDNAdistance.pair$value)
compDat <- data.frame("eDNA"=eDNAdistance.pair$value,"GeoDist"=geographicDistance.pair$value,"OceanResist"=oceanResistance.pair$value)
test <- compDat[!compDat$eDNA==0,]
par(mfrow=c(1,3))
plot(test$GeoDist,test$OceanResist)
plot(test$GeoDist,test$eDNA)
plot(test$OceanResist,test$eDNA)
summary(lm(test$eDNA~test$GeoDist+test$OceanResist,))
#################################
####====0.0 Packages====####
library("vegan")
library("ade4")
library("RColorBrewer")
library("reshape2")
#Set the seed
set.seed("123456")
palette(brewer.pal(12, "Set3"))
####====1.0 Pull in Data ====####
#Fish first
fishAll <- read.csv("cleandata/Cleaned_Fish_wTAX.csv",row.names=1)
fishAssign <- fishAll[,70:86]
fishdat <- fishAll[,1:69]
#Pull out site information
sites <- unlist(lapply(strsplit(colnames(fishdat),"\\."), `[[`, 1))
#Get the metadata
metadat <- read.csv("metadata.csv")
metadatSites <- read.csv("metadata.site.out.csv",row.names=1)
#Make a dataset across sites with mean values
fishdatSite <- as.data.frame(matrix(ncol=length(unique(sites)),nrow=dim(fishdat[1])))
colnames(fishdatSite) <- unique(sites)
rownames(fishdatSite) <- rownames(fishdat)
for (column in colnames(fishdatSite)){
running <- fishdat[,sites==column]
fishdatSite[,colnames(fishdatSite)==column] <- rowSums(running)/3
}
## pull in distance measures
siteDist <- as.matrix(read.csv("distanceData/SiteDistanceMatrix.csv",row.names = 1))
oceanResistance <- as.matrix(read.csv("distanceData/OceanogrphicResistanceMatrix.csv",row.names = 1))
# pull the data in
particle <- read.csv("ParticleTracking/TrialStats.csv")
####====2.0 Plotting basic alpha /beta metrics ====####
# by isalnds
fishdatB <- fishdatSite
fishdatB[fishdatB>0] <- 1
fishAlpha <- data.frame("ID"=names(fishdatB),"Richness"= colSums(fishdatB))
pdf("figures/FishRichness.pdf",height = 5,width = 6)
par(mar=c(6.1, 4.1, 2.1, 2.1))
plot(as.numeric(as.factor(metadatSites$island[match(fishAlpha$ID,metadatSites$SiteID)])),fishAlpha$Richness,
col=as.numeric(as.factor(metadatSites$island[match(fishAlpha$ID,metadatSites$SiteID)])),
pch=16,
cex=2.5,
ylab="ASV Richness",
xlab="",
xaxt='n'
)
axis(1,at=1:12,labels=levels(as.factor(metadatSites$island[match(fishAlpha$ID,metadatSites$SiteID)])),cex=0.2,las=2)
dev.off()
#by ecoregion
pdf("figures/FishRichness.ecoregion.pdf",height = 5,width = 6)
par(mar=c(6.1, 4.1, 2.1, 2.1))
plot(as.numeric(as.factor(metadatSites$EcoRegion[match(fishAlpha$ID,metadatSites$SiteID)])),fishAlpha$Richness,
col=as.numeric(as.factor(metadatSites$EcoRegion[match(fishAlpha$ID,metadatSites$SiteID)])),
pch=16,
cex=2.5,
ylab="ASV Richness",
xlab="",
xaxt='n'
)
axis(1,at=1:4,labels=levels(as.factor(metadatSites$EcoRegion[match(fishAlpha$ID,metadatSites$SiteID)])),cex=0.2,las=2)
dev.off()
#Now a beta diversity plot
pdf("figures/FishBetaDiv.pdf",height = 5,width = 6)
par(mar=c(2.1, 2.1, 2.1, 2.1))
nMDS <- metaMDS(vegdist(t(fishdat),method="jaccard",binary=TRUE),trymax=500)
plot(nMDS$points[,1],nMDS$points[,2],
pch=16,
cex=1.5,
col=as.numeric(as.factor(metadatSites$island[match(sites,metadatSites$SiteID)])),
main="",
ylab="",xlab="")
ordihull(nMDS,groups = sites,col = "grey71",draw = "polygon",lty=0)
points(nMDS$points[,1],nMDS$points[,2],pch=16,cex=1.5,
col=as.numeric(as.factor(metadatSites$island[match(sites,metadatSites$SiteID)])))
dev.off()
pdf("figures/FishBetaDivEcoRegions1.pdf",height = 5,width = 6)
par(mar=c(2.1, 2.1, 2.1, 2.1))
nMDS <- metaMDS(vegdist(t(fishdat),method="jaccard",binary=TRUE),trymax=500,k=2)
plot(nMDS$points[,1],nMDS$points[,2],
pch=16,
cex=1.5,
col=as.numeric(as.factor(metadatSites$EcoRegion[match(sites,metadatSites$SiteID)])),
main="",
ylab="",xlab="")
ordihull(nMDS,groups = sites,col = "grey71",draw = "polygon",lty=0)
points(nMDS$points[,1],nMDS$points[,2],pch=16,cex=1.5,
col=as.numeric(as.factor(metadatSites$EcoRegion[match(sites,metadatSites$SiteID)])))
text(nMDS$points[,1],nMDS$points[,2],labels=colnames(fishdat),cex=0.3)
dev.off()
### Can we formally test for ecoregion and if it drops out of the analysis?
groups0 <- sapply(strsplit(colnames(fishdat),"\\."),"[",1)
#Groups 1 as ecoregions
groups1 <- metadatSites$EcoRegion[match(groups0,metadatSites$SiteID)]
#Groups 2 w/ RED as Northern
groups2 <- groups1
groups2[groups0=="RED"]<-"Northern"
#ius the variance between ecoregions similar? -  lets run a PERMdisp
fishbetadisp <- betadisper(vegdist(t(fishdat), "jaccard",binary=TRUE),groups1)
anova(fishbetadisp)
#Sig difference in multivariate homogeneity - probably due to different numbers of samples
#Is there a sig diff in PERMANOVA between ecoregions?
adonis2(vegdist(t(fishdat), "jaccard",binary=TRUE)~groups2,permutations = 1000)
##Another little plot after the PERM findings
pdf("figures/FishBetaDivEcoRegions2.pdf",height = 5,width = 6)
par(mar=c(2.1, 2.1, 2.1, 2.1))
nMDS <- metaMDS(vegdist(t(fishdat),method="jaccard",binary=TRUE),trymax=500)
plot(nMDS$points[,1],nMDS$points[,2],
pch=16,
cex=1.5,
main="",
col=as.numeric(as.factor(groups2)),
ylab="",xlab="")
ordihull(nMDS,groups = sites,col = "grey71",draw = "polygon",lty=0)
points(nMDS$points[,1],nMDS$points[,2],pch=16,cex=1.5,
col=as.numeric(as.factor(groups2)))
text(nMDS$points[,1],nMDS$points[,2],labels=colnames(fishdat),cex=0.3)
dev.off()
####====3.0 ====####
## 3.1 Can we link biodiversity patterns to particle release parameters?
# Make some data
particle3 <- particle[particle$day=="-3",]
particle3o <- particle3[match(fishAlpha$ID,particle3$site),]
# Let's start with alpha diversity
pdf("figures/FishRichnessToOceanography.pdf",width =9,height=7)
par(mfrow=c(2,2))
par(mar=c(4.1, 4.1, 2.1, 1.1))
plot(particle3o$mean_spread,
fishAlpha$Richness,
ylab="Fish Richness",
xlab="Average Spread of Particles from Mean (Km)",
col=as.numeric(as.factor(metadatSites$island[match(fishAlpha$ID,metadatSites$SiteID)])),pch=16,cex=2.5)
plot(particle3o$mean_dist,
fishAlpha$Richness,
ylab="Fish Richness",
xlab="Distance of Particle Centroid from Sampling Site (Km)",
col=as.numeric(as.factor(metadatSites$island[match(fishAlpha$ID,metadatSites$SiteID)])),pch=16,cex=2.5)
plot(particle3o$area..km.,
fishAlpha$Richness,
ylab="Fish Richness",
xlab="Surface Area of Particles (Km)",
col=as.numeric(as.factor(metadatSites$island[match(fishAlpha$ID,metadatSites$SiteID)])),pch=16,cex=2.5)
plot(particle3o$ave_dist,
fishAlpha$Richness,
ylab="Fish Richness",
xlab="Average Distance of Particles From Sampling Point (Km)",
col=as.numeric(as.factor(metadatSites$island[match(fishAlpha$ID,metadatSites$SiteID)])),pch=16,cex=2.5)
dev.off()
#stats (none sig)
summary(lm(fishAlpha$Richness~particle3o$mean_spread))
summary(lm(fishAlpha$Richness~particle3o$ave_dist))
summary(lm(fishAlpha$Richness~particle3o$area..km.))
summary(lm(fishAlpha$Richness~particle3o$mean_dist))
# Now beta diversity with a distance based redundancy analysis
m1 <- dbrda(vegdist(t(fishdatSite),method="jaccard",binary=TRUE)~particle3o$mean_spread+
particle3o$ave_dist+
particle3o$area..km.+
particle3o$mean_dist)
plot(m1)
anova(m1,permutations = 10000)
anova(m1,by="margin",permutations = 10000)
RsquareAdj(m1)
# Overall little to no variation in fish communities can be explained by particle spread statistics
## 3.2 Can we link beta diversity to distance
#Is there a correlation between biodiversity measure distance & oceanographic distance after geographic distance is accounted for?
# First let's look at the data
geographicDistance <- as.dist(as.matrix(read.csv("distanceData/SiteDistanceMatrix.csv",row.names = 1)))
oceanResistance <- as.dist(as.matrix(read.csv("distanceData/OceanogrphicResistanceMatrix.csv",row.names = 1)))
nMDS.eDNA <- metaMDS(vegdist(t(fishdatSite),method="jaccard",binary=TRUE),trymax=500)
nMDS.dist <- metaMDS(geographicDistance,trymax=500)
nMDS.resist <- metaMDS(oceanResistance,trymax=500)
par(mfrow=c(1,3))
plot(nMDS.eDNA,type = "t",main="eDNA")
plot(nMDS.dist,type = "t",main="Distance")
plot(nMDS.resist,type = "t",main="Resistance")
# mantel
mantel.rtest(vegdist(t(fishdatSite),method="jaccard",binary=TRUE),geographicDistance, nrepet = 9999)
# Partial mantel
mantel.partial(vegdist(t(fishdatSite),method="jaccard",binary=TRUE),oceanResistance,geographicDistance, permutations = 999999,parallel = 8)
########### check out melted distance matrix comparisons
geographicDistance.pair <- melt(as.matrix(geographicDistance),varnames = c("Start","End"))
oceanResistance.pair <- melt(as.matrix(oceanResistance),varnames = c("Start","End"))
eDNAdistance.pair <- melt(as.matrix(vegdist(t(fishdatSite),method="jaccard",binary=TRUE)),varnames = c("Start","End"))
#Check the values using this plot - are they in the right order?
plot(1:529,match(paste(eDNAdistance.pair$Start,eDNAdistance.pair$End),
paste(oceanResistance.pair$Start,oceanResistance.pair$End)))
par(mfrow=c(1,3))
plot(geographicDistance.pair$value,oceanResistance.pair$value)
plot(geographicDistance.pair$value,eDNAdistance.pair$value)
plot(oceanResistance.pair$value,eDNAdistance.pair$value)
compDat <- data.frame("eDNA"=eDNAdistance.pair$value,"GeoDist"=geographicDistance.pair$value,"OceanResist"=oceanResistance.pair$value)
test <- compDat[!compDat$eDNA==0,]
par(mfrow=c(1,3))
plot(test$GeoDist,test$OceanResist)
plot(test$GeoDist,test$eDNA)
plot(test$OceanResist,test$eDNA)
summary(lm(test$eDNA~test$GeoDist+test$OceanResist,))
# Define the color palette
my_palette <- colorRampPalette(colors = c("blue", "white", "red"))
# Generate colors for the data between -1 and 1
my_colors <- my_palette(100)
# Plot the color ramp
image(matrix(seq(-1, 1, length.out = 100), ncol = 100), col = my_colors, axes = FALSE, xlab = "", ylab = "")
plot(test$eDNA~test$GeoDist)
dev.off()
plot(test$eDNA~test$GeoDist)
plot(test$eDNA~test$GeoDist,pch=16, cex=0.8)
plot(test$eDNA~test$GeoDist,pch=16, cex=0.8,col=test$OceanResist)
test$OceanResist
my_colors <- my_palette(100)
plot(test$eDNA~test$GeoDist,pch=16, cex=0.8,col=my_colors[findInterval(test$OceanResist, seq(-1, 1, length.out = 100))])
# Define the color palette
my_palette <- colorRampPalette(colors = c("blue", "black","red"))
# Generate colors for the data between -1 and 1
my_colors <- my_palette(100)
# Plot the color ramp
image(matrix(seq(-1, 1, length.out = 100), ncol = 100), col = my_colors, axes = FALSE, xlab = "", ylab = "")
# Define the color palette
my_palette <- colorRampPalette(colors = c("blue", "black","red"))
# Define the color palette
my_palette <- colorRampPalette(colors = c("blue", "black","red"))
my_palette
?colorRampPalette()
(test$OceanResist+1)/2
my_palette((test$OceanResist+1)/2)
(test$OceanResist+1)/2
my_palette((test$OceanResist+1)/2)
my_colours <- my_palette(100)
my_palette((test$OceanResist+1)/2)
# Define the color palette
my_palette <- colorRampPalette(colors = c("blue", "black","red"))
my_colours <- my_palette(100)
plot(test$eDNA~test$GeoDist,pch=16, cex=0.8,col=my_colors[findInterval(test$OceanResist, seq(-1, 1, length.out = 100))])
# Define the color palette
my_palette <- colorRampPalette(colors = c("blue", "green","red"))
my_colours <- my_palette(100)
plot(test$eDNA~test$GeoDist,pch=16, cex=0.8,col=my_colors[findInterval(test$OceanResist, seq(-1, 1, length.out = 100))])
# Define the color palette
my_palette <- colorRampPalette(colors = c("blue", "white","red"))
my_colours <- my_palette(100)
plot(test$eDNA~test$GeoDist,pch=16, cex=0.8,col=my_colors[findInterval(test$OceanResist, seq(-1, 1, length.out = 100))])
# Define the color palette
my_palette <- colorRampPalette(colors = c("blue", "white","red"))
my_colours <- my_palette(100)
plot(test$eDNA~test$GeoDist,pch=16, cex=0.8,col=my_colours[findInterval(test$OceanResist, seq(-1, 1, length.out = 100))])
# Define the color palette
my_palette <- colorRampPalette(colors = c("blue", "black","red"))
my_colours <- my_palette(100)
plot(test$eDNA~test$GeoDist,pch=16, cex=0.8,col=my_colours[findInterval(test$OceanResist, seq(-1, 1, length.out = 100))])
# Define the color palette
my_palette <- colorRampPalette(colors = c("blue", "lightpurple","red"))
my_colours <- my_palette(100)
# Define the color palette
my_palette <- colorRampPalette(colors = c("blue", "white","red"))
my_colours <- my_palette(100)
plot(test$eDNA~test$GeoDist,pch=16, cex=0.9)
points(test$GeoDist,test$eDNA,pch=16,cex=0.8,col=my_colours[findInterval(test$OceanResist, seq(-1, 1, length.out = 100))])
plot(test$eDNA~test$GeoDist,pch=16, cex=0.95)
points(test$GeoDist,test$eDNA,pch=16,cex=0.8,col=my_colours[findInterval(test$OceanResist, seq(-1, 1, length.out = 100))])
summary(test$OceanResist)
# Now a little epxeriment to look at the visuals of the difference
my_palette <- colorRampPalette(colors = c("blue", "white","red"))
my_colours <- my_palette(100)
plot(test$eDNA~test$GeoDist,pch=16, cex=0.95)
points(test$GeoDist,test$eDNA,pch=16,cex=0.8,col=my_colours[findInterval(test$OceanResist, seq(-0.38, 0.38, length.out = 100))])
ggplot(df, aes(x = test$GeoDist, y = test$eDNA, z = test$OceanResist)) +
geom_contour(aes(size = ..level..))
library(ggplot2)
ggplot(df, aes(x = test$GeoDist, y = test$eDNA, z = test$OceanResist)) +
geom_contour(aes(size = ..level..))
ggplot(test, aes(x = GeoDist, y = eDNA, z = OceanResist)) +
geom_contour(aes(size = ..level..))
set.seed(123)
x1 <- rnorm(100)
x2 <- rnorm(100)
y <- x1 + 2*x2 + rnorm(100)
df <- data.frame(x1, x2, y)
# Contour plot with size based on x2
library(ggplot2)
ggplot(df, aes(x = x1, y = y, z = x2)) +
geom_contour(aes(linewidth = after_stat(level)))
?geom_contour()
ggplot(test, aes(x = GeoDist, y = eDNA, z = OceanResist)) +
geom_contour()
ggplot(test, aes(x = GeoDist, y = eDNA, z = OceanResist)) +
geom_contour()
df <- melt(volcano)
p <- ggplot(df, aes(Var1, Var2, z= value)) +
geom_contour() +
scale_fill_distiller(palette = "Spectral", direction = -1)
library(plotly)
install.packages(plotly)
