ordihull(nMDS,groups = sites,col = "grey71",draw = "polygon",lty=0)
points(nMDS$points[,1],nMDS$points[,2],pch=16,cex=1.5,
col=metadatSites$col[match(sites,metadatSites$SiteID)])
dev.off()
pdf("figures/FishBetaDivEcoRegions1.pdf",height = 5,width = 6)
par(mar=c(2.1, 2.1, 2.1, 2.1))
nMDS <- metaMDS(vegdist(t(fishdat),method="jaccard",binary=TRUE),trymax=500,k=2)
plot(nMDS$points[,1],nMDS$points[,2],
pch=16,
cex=1.5,
col=as.numeric(as.factor(metadatSites$EcoRegion[match(sites,metadatSites$SiteID)])),
main="",
ylab="",xlab="")
ordihull(nMDS,groups = sites,col = "grey71",draw = "polygon",lty=0)
points(nMDS$points[,1],nMDS$points[,2],pch=16,cex=1.5,
col=as.numeric(as.factor(metadatSites$EcoRegion[match(sites,metadatSites$SiteID)])))
text(nMDS$points[,1],nMDS$points[,2],labels=colnames(fishdat),cex=0.3)
dev.off()
### Can we formally test for ecoregion and if it drops out of the analysis?
groups0 <- sapply(strsplit(colnames(fishdat),"\\."),"[",1)
#Groups 1 as ecoregions
groups1 <- metadatSites$EcoRegion[match(groups0,metadatSites$SiteID)]
#Groups 2 w/ RED as Northern
groups2 <- groups1
groups2[groups0=="RED"]<-"Northern"
#ius the variance between ecoregions similar? -  lets run a PERMdisp
fishbetadisp <- betadisper(vegdist(t(fishdat), "jaccard",binary=TRUE),groups1)
anova(fishbetadisp)
#Sig difference in multivariate homogeneity - probably due to different numbers of samples
#Is there a sig diff in PERMANOVA between ecoregions?
adonis2(vegdist(t(fishdat), "jaccard",binary=TRUE)~groups2,permutations = 1000)
##Another little plot after the PERM findings
pdf("figures/FishBetaDivEcoRegions2.pdf",height = 5,width = 6)
par(mar=c(2.1, 2.1, 2.1, 2.1))
nMDS <- metaMDS(vegdist(t(fishdat),method="jaccard",binary=TRUE),trymax=500)
plot(nMDS$points[,1],nMDS$points[,2],
pch=16,
cex=1.5,
main="",
col=as.numeric(as.factor(groups2)),
ylab="",xlab="")
ordihull(nMDS,groups = sites,col = "grey71",draw = "polygon",lty=0)
points(nMDS$points[,1],nMDS$points[,2],pch=16,cex=1.5,
col=as.numeric(as.factor(groups2)))
text(nMDS$points[,1],nMDS$points[,2],labels=colnames(fishdat),cex=0.3)
dev.off()
####====3.0 ====####
## 3.1 Can we link biodiversity patterns to particle release parameters?
# Make some data
particle3 <- particle[particle$day=="-3",]
particle3o <- particle3[match(fishAlpha$ID,particle3$site),]
# Let's start with alpha diversity
pdf("figures/FishRichnessToOceanography.pdf",width =9,height=7)
par(mfrow=c(2,2))
par(mar=c(4.1, 4.1, 2.1, 1.1))
plot(particle3o$mean_spread,
fishAlpha$Richness,
ylab="Fish Richness",
xlab="Average Spread of Particles from Mean (Km)",
col=as.numeric(as.factor(metadatSites$island[match(fishAlpha$ID,metadatSites$SiteID)])),pch=16,cex=2.5)
plot(particle3o$mean_dist,
fishAlpha$Richness,
ylab="Fish Richness",
xlab="Distance of Particle Centroid from Sampling Site (Km)",
col=as.numeric(as.factor(metadatSites$island[match(fishAlpha$ID,metadatSites$SiteID)])),pch=16,cex=2.5)
plot(particle3o$area..km.,
fishAlpha$Richness,
ylab="Fish Richness",
xlab="Surface Area of Particles (Km)",
col=as.numeric(as.factor(metadatSites$island[match(fishAlpha$ID,metadatSites$SiteID)])),pch=16,cex=2.5)
plot(particle3o$ave_dist,
fishAlpha$Richness,
ylab="Fish Richness",
xlab="Average Distance of Particles From Sampling Point (Km)",
col=as.numeric(as.factor(metadatSites$island[match(fishAlpha$ID,metadatSites$SiteID)])),pch=16,cex=2.5)
dev.off()
#stats (none sig)
summary(lm(fishAlpha$Richness~particle3o$mean_spread))
summary(lm(fishAlpha$Richness~particle3o$ave_dist))
summary(lm(fishAlpha$Richness~particle3o$area..km.))
summary(lm(fishAlpha$Richness~particle3o$mean_dist))
# Now beta diversity with a distance based redundancy analysis
m1 <- dbrda(vegdist(t(fishdatSite),method="jaccard",binary=TRUE)~particle3o$mean_spread+
particle3o$ave_dist+
particle3o$area..km.+
particle3o$mean_dist)
plot(m1)
anova(m1,permutations = 10000)
anova(m1,by="margin",permutations = 10000)
RsquareAdj(m1)
# Overall little to no variation in fish communities can be explained by particle spread statistics
## 3.2 Can we link beta diversity to distance
#Is there a correlation between biodiversity measure distance & oceanographic distance after geographic distance is accounted for?
# First let's look at the data
geographicDistance <- as.dist(as.matrix(read.csv("distanceData/SiteDistanceMatrix.csv",row.names = 1)),upper = T)
oceanResistance <- as.dist(as.matrix(read.csv("distanceData/OceanogrphicResistanceMatrix.csv",row.names = 1)),upper = T)
nMDS.eDNA <- metaMDS(vegdist(t(fishdatSite),method="jaccard",binary=TRUE),trymax=500)
nMDS.dist <- metaMDS(geographicDistance,trymax=500)
nMDS.resist <- metaMDS(oceanResistance,trymax=500)
par(mfrow=c(1,3))
plot(nMDS.eDNA,type = "t",main="eDNA")
plot(nMDS.dist,type = "t",main="Distance")
plot(nMDS.resist,type = "t",main="Resistance")
par(mfrow=c(2,2))
plot(geographicDistance,vegdist(t(fishdatSite),method="jaccard",binary=TRUE),pch=16,ylim=c(0,1))
plot(oceanResistance,vegdist(t(fishdatSite),method="jaccard",binary=TRUE),pch=16)
test <- myjac_mod(fishdatSite)
test[test==0] <- NA
plot(as.matrix(read.csv("distanceData/SiteDistanceMatrix.csv",row.names = 1)),test,ylim=c(0,1),pch=16)
plot(as.matrix(read.csv("distanceData/OceanogrphicResistanceMatrix.csv",row.names = 1)),test,pch=16)
plot(test,as.matrix(vegdist(t(fishdatSite),method="jaccard",binary=TRUE)))
# mantel
mantel.rtest(vegdist(t(fishdatSite),method="jaccard",binary=TRUE),geographicDistance, nrepet = 9999)
# Partial mantel
test2 <- as.matrix(vegdist(t(fishdatSite),method="jaccard",binary=TRUE))
test2[test2==0] <- NA
mantel.partial(vegdist(t(fishdatSite),method="jaccard",binary=TRUE),oceanResistance,geographicDistance, permutations = 999999,parallel = 8)
geographicDistance.pair <- reshape2::melt(as.matrix(geographicDistance),varnames = c("Start","End"))
oceanResistance.pair <- reshape2::melt(as.matrix(oceanResistance),varnames = c("Start","End"))
eDNAdistance.pair <-reshape2::melt(as.matrix(vegdist(t(fishdatSite),method="jaccard",binary=TRUE)),varnames = c("Start","End"))
eDNAdistance.pair.mod = reshape2::melt(myjac_mod(fishdatSite), varnames=c("Start","End"))
eDNAdistance.pair.mod.No0 <- eDNAdistance.pair.mod[-which(eDNAdistance.pair.mod$value == 0),]
eDNAdistance.pair.No0 <- eDNAdistance.pair[-which(eDNAdistance.pair.mod$value == 0),]
geographicDistance.pair.No0 <- geographicDistance.pair[-which(eDNAdistance.pair.mod$value == 0),]
oceanResistance.pair.No0 <- oceanResistance.pair[-which(eDNAdistance.pair.mod$value == 0),]
myjac = function (datamat) {
datamat = datamat>0
mj = apply(datamat, 2, function(x) {
apply(datamat, 2, function(y) {
return(sum(x&y)/sum(x|y))
})
})
return(1-mj)
}
myjac_mod = function (datamat) {
datamat = datamat>0
mj = apply(datamat, 2, function(x) {
apply(datamat, 2, function(y) {
return(sum(x&y)/sum(x))
})
})
return(1-mj)
}
plot(eDNAdistance.pair.mod.No0$value,eDNAdistance.pair.No0$value)
plot(eDNAdistance.pair.mod.No0$value,geographicDistance.pair.No0$value)
plot(eDNAdistance.pair.No0$value,geographicDistance.pair.No0$value)
model1 = lm (eDNAdistance.pair.mod.No0$value~geographicDistance.pair.No0$value)
model2 = lm (model1$residuals ~ oceanResistance.pair.No0$value)
model3 = lm (eDNAdistance.pair.mod.No0$value~geographicDistance.pair.No0$value + oceanResistance.pair.No0$value)
model4 = lm (eDNAdistance.pair.No0$value~geographicDistance.pair.No0$value + oceanResistance.pair.No0$value)
abline(model1, col="firebrick", lwd=2)
summary(model1)
summary(model2)
summary(model3)
summary(model4)
#RED = negative BLUE = positive
my_palette <- colorRampPalette(colors = c("red", "white","blue"))
my_colours <- my_palette(100)
plot(geographicDistance.pair.No0$value,
eDNAdistance.pair.mod.No0$value,
pch=16, cex=0.95)
points(geographicDistance.pair.No0$value,
eDNAdistance.pair.mod.No0$value,
col=my_colours[findInterval(oceanResistance.pair.No0$value, seq(-0.38, 0.38, length.out = 100))],
pch=16,cex=0.8)
plot(geographicDistance.pair.No0$value,
eDNAdistance.pair.No0$value,
pch=16, cex=0.95)
points(geographicDistance.pair.No0$value,
eDNAdistance.pair.No0$value,
col=my_colours[findInterval(oceanResistance.pair.No0$value, seq(-0.38, 0.38, length.out = 100))],
pch=16,cex=0.8)
dev.off()
plot(geographicDistance.pair.No0$value,
eDNAdistance.pair.No0$value,
pch=16, cex=0.95)
points(geographicDistance.pair.No0$value,
eDNAdistance.pair.No0$value,
col=my_colours[findInterval(oceanResistance.pair.No0$value, seq(-0.38, 0.38, length.out = 100))],
pch=16,cex=0.8)
plot((geographicDistance.pair.No0$value)/1000,
eDNAdistance.pair.No0$value,
pch=16, cex=0.95,
xlab="Geographic Distance (km)",
ylab="Jaccard Dissimilarity")
points(geographicDistance.pair.No0$value,
eDNAdistance.pair.No0$value,
col=my_colours[findInterval(oceanResistance.pair.No0$value, seq(-0.38, 0.38, length.out = 100))],
pch=16,cex=0.8)
points((geographicDistance.pair.No0$value)/1000,
eDNAdistance.pair.No0$value,
col=my_colours[findInterval(oceanResistance.pair.No0$value, seq(-0.38, 0.38, length.out = 100))],
pch=16,cex=0.8)
plot((geographicDistance.pair.No0$value)/1000,
log(eDNAdistance.pair.No0$value),
pch=16, cex=0.95,
xlab="Geographic Distance (km)",
ylab="Jaccard Dissimilarity")
plot(log(geographicDistance.pair.No0$value)/1000,
eDNAdistance.pair.No0$value,
pch=16, cex=0.95,
xlab="Geographic Distance (km)",
ylab="Jaccard Dissimilarity")
model5 = lm (eDNAdistance.pair.No0$value~log(geographicDistance.pair.No0$value) + oceanResistance.pair.No0$value)
summary(model4)
summary(model5)
AIC(model4,model5)
plot(model4)
plot(model5)
plot(log(geographicDistance.pair.No0$value)/1000,
eDNAdistance.pair.No0$value,
pch=16, cex=0.95,
xlab="Geographic Distance (km)",
ylab="Jaccard Dissimilarity")
points((geographicDistance.pair.No0$value)/1000,
eDNAdistance.pair.No0$value,
col=my_colours[findInterval(oceanResistance.pair.No0$value, seq(-0.38, 0.38, length.out = 100))],
pch=16,cex=0.8)
plot((geographicDistance.pair.No0$value)/1000,
eDNAdistance.pair.No0$value,
pch=16, cex=0.95,
xlab="Geographic Distance (km)",
ylab="Jaccard Dissimilarity")
points((geographicDistance.pair.No0$value)/1000,
eDNAdistance.pair.No0$value,
col=my_colours[findInterval(oceanResistance.pair.No0$value, seq(-0.38, 0.38, length.out = 100))],
pch=16,cex=0.8)
seq(-0.38, 0.38, length.out = 100)
my_colours
plot(my_colours)
plot((geographicDistance.pair.No0$value)/1000,
eDNAdistance.pair.No0$value,
pch=16, cex=0.95,
xlab="Geographic Distance (km)",
ylab="Jaccard Dissimilarity")
points((geographicDistance.pair.No0$value)/1000,
eDNAdistance.pair.No0$value,
col=my_colours[findInterval(oceanResistance.pair.No0$value, seq(-0.38, 0.38, length.out = 100))],
pch=16,cex=0.8)
legend_image <- as.raster(matrix(my_colours(100), ncol=1))
my_colours(100)
#RED = negative BLUE = positive
my_palette <- colorRampPalette(colors = c("red", "white","blue"))
my_colours <- my_palette(100)
my_colours
legend_image <- as.raster(matrix(my_palette(100), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'legend title')
text(x=1.5, y = seq(0,1,l=5), labels = seq(0,1,l=5))
rasterImage(legend_image, 0, 0, 1,1)
plot((geographicDistance.pair.No0$value)/1000,
eDNAdistance.pair.No0$value,
pch=16, cex=0.95,
xlab="Geographic Distance (km)",
ylab="Jaccard Dissimilarity")
points((geographicDistance.pair.No0$value)/1000,
eDNAdistance.pair.No0$value,
col=my_colours[findInterval(oceanResistance.pair.No0$value, seq(-0.38, 0.38, length.out = 100))],
pch=16,cex=0.8)
legend_image <- as.raster(matrix(my_palette(100), ncol=1))
rasterImage(legend_image, 0, 0, 1,1,add=TRUE)
?rasterImage()
pdf("figures/DistDecayV1.pdf",width = 7,height = 5)
plot((geographicDistance.pair.No0$value)/1000,
eDNAdistance.pair.No0$value,
pch=16, cex=0.95,
xlab="Geographic Distance (km)",
ylab="Jaccard Dissimilarity")
points((geographicDistance.pair.No0$value)/1000,
eDNAdistance.pair.No0$value,
col=my_colours[findInterval(oceanResistance.pair.No0$value, seq(-0.38, 0.38, length.out = 100))],
pch=16,cex=0.8)
dev.off()
pdf("figures/DistDecayV1.pdf",width = 6.5,height = 5)
plot((geographicDistance.pair.No0$value)/1000,
eDNAdistance.pair.No0$value,
pch=16, cex=0.95,
xlab="Geographic Distance (km)",
ylab="Jaccard Dissimilarity")
points((geographicDistance.pair.No0$value)/1000,
eDNAdistance.pair.No0$value,
col=my_colours[findInterval(oceanResistance.pair.No0$value, seq(-0.38, 0.38, length.out = 100))],
pch=16,cex=0.8)
dev.off()
pdf("figures/DistDecayV1.pdf",width = 6.5,height = 5)
par(mar=c(4.1, 4.1, 6.1, 1.1))
plot((geographicDistance.pair.No0$value)/1000,
eDNAdistance.pair.No0$value,
pch=16, cex=0.95,
xlab="Geographic Distance (km)",
ylab="Jaccard Dissimilarity")
points((geographicDistance.pair.No0$value)/1000,
eDNAdistance.pair.No0$value,
col=my_colours[findInterval(oceanResistance.pair.No0$value, seq(-0.38, 0.38, length.out = 100))],
pch=16,cex=0.8)
dev.off()
legend_image <- as.raster(matrix(my_palette(100), ncol=1))
rasterImage(legend_image, 0, 0, 1,1,add=TRUE,xpd=T)
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'legend title')
text(x=1.5, y = seq(0,1,l=5), labels = seq(0,1,l=5))
pdf("figures/DistDecayV1.pdf",width = 6.5,height = 5)
par(mar=c(4.1, 4.1, 2.1, 6.1))
plot((geographicDistance.pair.No0$value)/1000,
eDNAdistance.pair.No0$value,
pch=16, cex=0.95,
xlab="Geographic Distance (km)",
ylab="Jaccard Dissimilarity")
points((geographicDistance.pair.No0$value)/1000,
eDNAdistance.pair.No0$value,
col=my_colours[findInterval(oceanResistance.pair.No0$value, seq(-0.38, 0.38, length.out = 100))],
pch=16,cex=0.8)
dev.off()
pdf("figures/DistDecayV1.pdf",width = 7,height = 5)
par(mar=c(4.1, 4.1, 2.1, 6.1))
plot((geographicDistance.pair.No0$value)/1000,
eDNAdistance.pair.No0$value,
pch=16, cex=0.95,
xlab="Geographic Distance (km)",
ylab="Jaccard Dissimilarity")
points((geographicDistance.pair.No0$value)/1000,
eDNAdistance.pair.No0$value,
col=my_colours[findInterval(oceanResistance.pair.No0$value, seq(-0.38, 0.38, length.out = 100))],
pch=16,cex=0.8)
dev.off()
par(mar=c(4.1, 4.1, 2.1, 6.1))
plot((geographicDistance.pair.No0$value)/1000,
eDNAdistance.pair.No0$value,
pch=16, cex=0.95,
xlab="Geographic Distance (km)",
ylab="Jaccard Dissimilarity")
points((geographicDistance.pair.No0$value)/1000,
eDNAdistance.pair.No0$value,
col=my_colours[findInterval(oceanResistance.pair.No0$value, seq(-0.38, 0.38, length.out = 100))],
pch=16,cex=0.8)
rasterImage(legend_image, 350, 350, 0.65,0.7,add=TRUE,xpd=T)
plot((geographicDistance.pair.No0$value)/1000,
eDNAdistance.pair.No0$value,
pch=16, cex=0.95,
xlab="Geographic Distance (km)",
ylab="Jaccard Dissimilarity")
points((geographicDistance.pair.No0$value)/1000,
eDNAdistance.pair.No0$value,
col=my_colours[findInterval(oceanResistance.pair.No0$value, seq(-0.38, 0.38, length.out = 100))],
pch=16,cex=0.8)
legend_image <- as.raster(matrix(my_palette(100), ncol=1))
rasterImage(legend_image, 350, 350, 0.65,0.7,xpd=T)
plot((geographicDistance.pair.No0$value)/1000,
eDNAdistance.pair.No0$value,
pch=16, cex=0.95,
xlab="Geographic Distance (km)",
ylab="Jaccard Dissimilarity")
points((geographicDistance.pair.No0$value)/1000,
eDNAdistance.pair.No0$value,
col=my_colours[findInterval(oceanResistance.pair.No0$value, seq(-0.38, 0.38, length.out = 100))],
pch=16,cex=0.8)
legend_image <- as.raster(matrix(my_palette(100), ncol=1))
rasterImage(legend_image, 350, 0.65, 360,0.7,xpd=T)
rasterImage(legend_image, 350, 0.60, 360,0.7,xpd=T)
rasterImage(legend_image, 350, 0.60, 360,0.75,xpd=T)
seq(-0.38,0.38,5)
seq(-0.38,0.38,l=5)
text(x=365, y = seq(0.6,0.75,l=5), labels = seq(-0.38,0.38,l=5),xpd=T)
?text
text(x=365, y = seq(0.6,0.75,l=5), labels = seq(-0.38,0.38,l=5),xpd=T,adj=1)
plot((geographicDistance.pair.No0$value)/1000,
eDNAdistance.pair.No0$value,
pch=16, cex=0.95,
xlab="Geographic Distance (km)",
ylab="Jaccard Dissimilarity")
points((geographicDistance.pair.No0$value)/1000,
eDNAdistance.pair.No0$value,
col=my_colours[findInterval(oceanResistance.pair.No0$value, seq(-0.38, 0.38, length.out = 100))],
pch=16,cex=0.8)
legend_image <- as.raster(matrix(my_palette(100), ncol=1))
rasterImage(legend_image, 350, 0.60, 360,0.75,xpd=T)
text(x=365, y = seq(0.6,0.75,l=5), labels = seq(-0.38,0.38,l=5),xpd=T,adj=1)
text(x=365, y = seq(0.6,0.75,l=5), labels = seq(-0.38,0.38,l=5),xpd=T,adj=3)
text(x=365, y = seq(0.6,0.75,l=5), labels = seq(-0.38,0.38,l=5),xpd=T,adj=-1)
plot((geographicDistance.pair.No0$value)/1000,
eDNAdistance.pair.No0$value,
pch=16, cex=0.95,
xlab="Geographic Distance (km)",
ylab="Jaccard Dissimilarity")
points((geographicDistance.pair.No0$value)/1000,
eDNAdistance.pair.No0$value,
col=my_colours[findInterval(oceanResistance.pair.No0$value, seq(-0.38, 0.38, length.out = 100))],
pch=16,cex=0.8)
legend_image <- as.raster(matrix(my_palette(100), ncol=1))
rasterImage(legend_image, 350, 0.60, 360,0.75,xpd=T)
text(x=365, y = seq(0.6,0.75,l=5), labels = seq(-0.38,0.38,l=5),xpd=T,pos = 4)
text(x=345, y = seq(0.6,0.75,l=5), labels = seq(-0.38,0.38,l=5),xpd=T,pos = 4)
text(x=340, y = seq(0.6,0.75,l=5), labels = seq(-0.38,0.38,l=5),xpd=T,pos = 4)
text(x=320, y = seq(0.6,0.75,l=5), labels = seq(-0.38,0.38,l=5),xpd=T,pos = 4)
text(x=320, y = seq(0.6,0.75,l=5), labels = seq(-0.38,0.38,l=5),xpd=T,pos = 4,cex=0.7)
pdf("figures/DistDecayV1.pdf",width = 7,height = 5)
par(mar=c(4.1, 4.1, 2.1, 6.1))
plot((geographicDistance.pair.No0$value)/1000,
eDNAdistance.pair.No0$value,
pch=16, cex=0.95,
xlab="Geographic Distance (km)",
ylab="Jaccard Dissimilarity")
points((geographicDistance.pair.No0$value)/1000,
eDNAdistance.pair.No0$value,
col=my_colours[findInterval(oceanResistance.pair.No0$value, seq(-0.38, 0.38, length.out = 100))],
pch=16,cex=0.8)
legend_image <- as.raster(matrix(my_palette(100), ncol=1))
rasterImage(legend_image, 350, 0.60, 360,0.75,xpd=T)
text(x=320, y = seq(0.6,0.75,l=5), labels = seq(-0.38,0.38,l=5),xpd=T,pos = 4,cex=0.7)
dev.off()
pdf("figures/DistDecayV1.pdf",width = 7,height = 5)
par(mar=c(4.1, 4.1, 2.1, 6.1))
plot((geographicDistance.pair.No0$value)/1000,
eDNAdistance.pair.No0$value,
pch=16, cex=0.95,
xlab="Geographic Distance (km)",
ylab="Jaccard Dissimilarity")
points((geographicDistance.pair.No0$value)/1000,
eDNAdistance.pair.No0$value,
col=my_colours[findInterval(oceanResistance.pair.No0$value, seq(-0.38, 0.38, length.out = 100))],
pch=16,cex=0.8)
legend_image <- as.raster(matrix(my_palette(100), ncol=1))
rasterImage(legend_image, 350, 0.60, 360,0.75,xpd=T)
text(x=365, y = seq(0.6,0.75,l=5), labels = paste0("-  ",seq(-0.38,0.38,l=5),)xpd=T,pos = 4,cex=0.7)
pdf("figures/DistDecayV1.pdf",width = 7,height = 5)
par(mar=c(4.1, 4.1, 2.1, 6.1))
plot((geographicDistance.pair.No0$value)/1000,
eDNAdistance.pair.No0$value,
pch=16, cex=0.95,
xlab="Geographic Distance (km)",
ylab="Jaccard Dissimilarity")
points((geographicDistance.pair.No0$value)/1000,
eDNAdistance.pair.No0$value,
col=my_colours[findInterval(oceanResistance.pair.No0$value, seq(-0.38, 0.38, length.out = 100))],
pch=16,cex=0.8)
legend_image <- as.raster(matrix(my_palette(100), ncol=1))
rasterImage(legend_image, 350, 0.60, 360,0.75,xpd=T)
text(x=365, y = seq(0.6,0.75,l=5), labels = paste0("-  ",seq(-0.38,0.38,l=5))xpd=T,pos = 4,cex=0.7)
paste0("-  ",seq(-0.38,0.38,l=5))
pdf("figures/DistDecayV1.pdf",width = 7,height = 5)
par(mar=c(4.1, 4.1, 2.1, 6.1))
plot((geographicDistance.pair.No0$value)/1000,
eDNAdistance.pair.No0$value,
pch=16, cex=0.95,
xlab="Geographic Distance (km)",
ylab="Jaccard Dissimilarity")
points((geographicDistance.pair.No0$value)/1000,
eDNAdistance.pair.No0$value,
col=my_colours[findInterval(oceanResistance.pair.No0$value, seq(-0.38, 0.38, length.out = 100))],
pch=16,cex=0.8)
legend_image <- as.raster(matrix(my_palette(100), ncol=1))
rasterImage(legend_image, 350, 0.60, 360,0.75,xpd=T)
text(x=365, y = seq(0.6,0.75,l=5), labels = paste0("-  ",seq(-0.38,0.38,l=5)),xpd=T,pos = 4,cex=0.7)
dev.off()
pdf("figures/DistDecayV1.pdf",width = 7,height = 5)
par(mar=c(4.1, 4.1, 2.1, 6.1))
plot((geographicDistance.pair.No0$value)/1000,
eDNAdistance.pair.No0$value,
pch=16, cex=0.95,
xlab="Geographic Distance (km)",
ylab="Jaccard Dissimilarity")
points((geographicDistance.pair.No0$value)/1000,
eDNAdistance.pair.No0$value,
col=my_colours[findInterval(oceanResistance.pair.No0$value, seq(-0.38, 0.38, length.out = 100))],
pch=16,cex=0.8)
legend_image <- as.raster(matrix(my_palette(100), ncol=1))
rasterImage(legend_image, 350, 0.60, 360,0.75,xpd=T)
text(x=360, y = seq(0.6,0.75,l=5), labels = paste0("-  ",seq(-0.38,0.38,l=5)),xpd=T,pos = 4,cex=0.7)
dev.off()
pdf("figures/DistDecayV1.pdf",width = 7,height = 5)
par(mar=c(4.1, 4.1, 2.1, 6.1))
plot((geographicDistance.pair.No0$value)/1000,
eDNAdistance.pair.No0$value,
pch=16, cex=0.95,
xlab="Geographic Distance (km)",
ylab="Jaccard Dissimilarity")
points((geographicDistance.pair.No0$value)/1000,
eDNAdistance.pair.No0$value,
col=my_colours[findInterval(oceanResistance.pair.No0$value, seq(-0.38, 0.38, length.out = 100))],
pch=16,cex=0.8)
legend_image <- as.raster(matrix(my_palette(100), ncol=1))
rasterImage(legend_image, 350, 0.60, 360,0.75,xpd=T)
text(x=355, y = seq(0.6,0.75,l=5), labels = paste0("-  ",seq(-0.38,0.38,l=5)),xpd=T,pos = 4,cex=0.7)
dev.off()
pdf("figures/DistDecayV1.pdf",width = 7,height = 5)
par(mar=c(4.1, 4.1, 2.1, 6.1))
plot((geographicDistance.pair.No0$value)/1000,
eDNAdistance.pair.No0$value,
pch=16, cex=0.95,
xlab="Geographic Distance (km)",
ylab="Jaccard Dissimilarity")
points((geographicDistance.pair.No0$value)/1000,
eDNAdistance.pair.No0$value,
col=my_colours[findInterval(oceanResistance.pair.No0$value, seq(-0.38, 0.38, length.out = 100))],
pch=16,cex=0.8)
legend_image <- as.raster(matrix(my_palette(100), ncol=1))
rasterImage(legend_image, 350, 0.60, 360,0.75,xpd=T)
text(x=350, y = seq(0.6,0.75,l=5), labels = paste0("-  ",seq(-0.38,0.38,l=5)),xpd=T,pos = 4,cex=0.7)
dev.off()
pdf("figures/DistDecayV1.pdf",width = 7,height = 5)
par(mar=c(4.1, 4.1, 2.1, 6.1))
plot((geographicDistance.pair.No0$value)/1000,
eDNAdistance.pair.No0$value,
pch=16, cex=0.95,
xlab="Geographic Distance (km)",
ylab="Jaccard Dissimilarity")
points((geographicDistance.pair.No0$value)/1000,
eDNAdistance.pair.No0$value,
col=my_colours[findInterval(oceanResistance.pair.No0$value, seq(-0.38, 0.38, length.out = 100))],
pch=16,cex=0.8)
legend_image <- as.raster(matrix(my_palette(100), ncol=1))
rasterImage(legend_image, 350, 0.60, 360,0.75,xpd=T)
text(x=353, y = seq(0.6,0.75,l=5), labels = paste0("-  ",seq(-0.38,0.38,l=5)),xpd=T,pos = 4,cex=0.7)
dev.off()
