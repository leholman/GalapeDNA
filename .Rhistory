testFun(100,199)
testFun(-100,199)
testFun <- function(Northing,Easting){
resultant_angle <- atan2(Northing, Easting)
print(resultant_angle)
resultant_angle_degrees <- 180 * resultant_angle / pi
print(resultant_angle_degrees)-90}
testFun(-100,199)
testFun(10000000000,1)
testFun(1,1000000000)
?atan2
testFun <- function(Northing,Easting){
resultant_angle <- atan2(Northing, Easting)
print(resultant_angle)
resultant_angle_degrees <- 180 * resultant_angle / pi
print(resultant_angle_degrees-90)}
testFun(1,1000000000)
testFun(1000,1000000000)
testFun(100000,1000000000)
atan2(100,100000)
(180/pi)*atan2(100,100000)
(180/pi)*atan2(1000,100000)
(180/pi)*atan2(10000,100000)
(180/pi)*atan2(100000,100000)
(180/pi)*atan2(1,100000)
(180/pi)*atan2(100000000000000,100)
testFun <- function(Northing,Easting){
resultant_angle <- atan2(Northing, Easting)
print(resultant_angle)
resultant_angle_degrees <- (180/pi)* resultant_angle
print(resultant_angle_degrees-90)}
testFun(100000,1000000000)
testFun <- function(Northing,Easting){
resultant_angle <- atan2(Northing, Easting)
print(resultant_angle)
resultant_angle_degrees <- (180/pi)* resultant_angle
print(90-resultant_angle_degrees)}
testFun(100000,1000000000)
testFun(100000,-1000000000)
testFun(100000,100)
testFun(-100000,10000000000)
testFun(-100000,100)
testFun(-100000,-100)
testFun(-100000,-10000000000)
testFun(100000,-10000000000)
testFun <- function(Northing,Easting){
resultant_angle <- atan2(Northing, Easting)
print(resultant_angle)
resultant_angle_degrees <- (180/pi)* resultant_angle
print(resultant_angle_degrees)}
testFun(100000,-10000000000)
testFun(5,5)
testFun(-5,5)
testFun(-5,-5)
testFun(5,-5)
print(resultant_angle_degrees+180)}
testFun <- function(Northing,Easting){
resultant_angle <- atan2(Northing, Easting)
print(resultant_angle)
resultant_angle_degrees <- (180/pi)* resultant_angle
print(resultant_angle_degrees+180)}
testFun(5,5)
testFun(5,-5)
testFun(-5,5)
testFun(-5,-5)
testFun <- function(Northing,Easting){
resultant_angle <- atan2(Easting, Northing)
print(resultant_angle)
resultant_angle_degrees <- (180/pi)* resultant_angle
print(resultant_angle_degrees+180)}
tesFun(5,5)
testFun(5,5)
testFun(+5,5)
testFun(-5,5)
testFun <- function(Northing,Easting){
resultant_angle <- atan2(Easting, Northing)
resultant_angle_degrees <- (180/pi) * resultant_angle
resultant_angle_degrees <- ifelse(resultant_angle_degrees < 0, 360 + resultant_angle_degrees, resultant_angle_degrees)}
testFun(100000,1000000000)
testFun(-5,5)
testFun <- function(Northing,Easting){
resultant_angle <- atan2(Easting, Northing)
resultant_angle_degrees <- (180/pi) * resultant_angle
resultant_angle_degrees <- ifelse(resultant_angle_degrees < 0, 360 + resultant_angle_degrees, resultant_angle_degrees)
return(resultant_angle_degrees)}
testFun(100000,1000000000)
testFun(100000,100000)
testFun <- function(Northing,Easting){
resultant_angle <- atan2(Northing,Easting)
resultant_angle_degrees <- (180/pi) * resultant_angle
resultant_angle_degrees <- ifelse(resultant_angle_degrees < 0, 360 + resultant_angle_degrees, resultant_angle_degrees)
return(resultant_angle_degrees)}
testFun(100000,1000000000)
testFun(100000,100000)
testFun(-100000,100000)
testFun <- function(Easting,Northing){
resultant_angle <- atan2(Northing,Easting)
resultant_angle_degrees <- (180/pi) * resultant_angle
resultant_angle_degrees <- ifelse(resultant_angle_degrees < 0, 360 + resultant_angle_degrees, resultant_angle_degrees)
return(resultant_angle_degrees)}
testFun(5,5)
testFun(-5,5)
testFun(-5,-5)
testFun(5,-5)
testFun(50000,-5)
vectorSum <- function(Easting,Northing){
resultant_angle <- atan2(Northing,Easting)
resultant_angle_degrees <- (180/pi) * resultant_angle
resultant_angle_degrees <- ifelse(resultant_angle_degrees < 0, 360 + resultant_angle_degrees, resultant_angle_degrees)
return(resultant_angle_degrees)}
vectorSum(5,5)
vectorSum(-5,5)
vectorSum(-5,-5)
vectorSum(5,-5)
modeldat <-read.csv("pathPoints/pathPointsTable_Sep.csv")
modeldatLAND <- modeldat[modeldat$VVEL==0,]
points(modeldatLAND$lon,modeldatLAND$lat,pch=16,col="red",cex=0.4)
plot(modeldatLAND$lon,modeldatLAND$lat,pch=16,col="red",cex=0.4)
View(modeldatLAND)
apply(df, 1, function(x) vectorSum(x["UVEL"], x["VVEL"]))
apply(modeldatLAND, 1, function(x) vectorSum(x["UVEL"], x["VVEL"]))
str(modeldatLAND$VVEL)
str(modeldatLAND$UVEL)
vectorSum <- function(Northing,Easting){
resultant_angle <- atan2(Northing,Easting)
resultant_angle_degrees <- (180/pi) * resultant_angle
resultant_angle_degrees <- ifelse(resultant_angle_degrees < 0, 360 + resultant_angle_degrees, resultant_angle_degrees)
return(resultant_angle_degrees)}
vectorSum(5,5)
vectorSum(-5,5)
vectorSum(-5,-5)
vectorSum(5,-5)
vectorSum <- function(Northing,Easting){
resultant_angle <- atan2(Easting,Northing)
resultant_angle_degrees <- (180/pi) * resultant_angle
resultant_angle_degrees <- ifelse(resultant_angle_degrees < 0, 360 + resultant_angle_degrees, resultant_angle_degrees)
return(resultant_angle_degrees)}
vectorSum(5,5)
vectorSum(-5,5)
vectorSum(-5,-5)
vectorSum(5,-5)
vectorSum(5,5)
vectorSum(-5,5)
vectorSum(-5,-5)
vectorSum(5,-5)
class(modeldatLAND$UVEL)
class(modeldatLAND$VVEL)
sum(is.na(modeldatLAND$UVEL))
sum(is.na(modeldatLAND$VVEL))
sum(modeldatLAND$UVEL==0)
vectorSum <- function(Northing,Easting){
if(Northing == 0 & Easting == 0){warning("Zero Values")}
resultant_angle <- atan2(Easting,Northing)
resultant_angle_degrees <- (180/pi) * resultant_angle
resultant_angle_degrees <- ifelse(resultant_angle_degrees < 0, 360 + resultant_angle_degrees, resultant_angle_degrees)
return(resultant_angle_degrees)}
vectorSum(5,5)
vectorSum(-5,5)
vectorSum(-5,-5)
vectorSum(5,-5)
apply(modeldatLAND, 1, function(x) vectorSum(x["UVEL"], x["VVEL"]))
str(x)
?apply
View(modeldatLAND)
apply(modeldatLAND, 1, function(x) vectorSum(x[7], x[8]))
apply(modeldatLAND, 1, function(x) print(x[7], x[8]))
apply(modeldatLAND, 2, function(x) print(x[7], x[8]))
mapply(vectorSum,modeldatLAND$UVEL,modeldatLAND$VVEL)
modeldatLAND$VVEL
View(modeldatLAND)
modeldat <-read.csv("pathPoints/pathPointsTable_Sep.csv")
mapply(vectorSum,modeldat$UVEL,modeldat$VVEL)
warnings()
test <- mapply(vectorSum,modeldat$UVEL,modeldat$VVEL)
hist(test)
plot(modeldat$UVEL)
plot(modeldat$VVEL)
hist(modeldat$UVEL)
hist(modeldat$VVEL)
par(mfrow=c(2,1))
hist(modeldat$UVEL)
hist(modeldat$VVEL)
hist(modeldat$UVEL,breaks=100)
hist(modeldat$VVEL,breaks=100)
hist(test,breaks=100)
par(mfrow=c(1,1))
hist(test,breaks=100)
vectorSum <- function(Northing,Easting){
if(Northing == 0 & Easting == 0){return(NA)}
resultant_angle <- atan2(Easting,Northing)
resultant_angle_degrees <- (180/pi) * resultant_angle
resultant_angle_degrees <- ifelse(resultant_angle_degrees < 0, 360 + resultant_angle_degrees, resultant_angle_degrees)
return(resultant_angle_degrees)}
vectorSum(1,5)
vectorSum <- function(Northing,Easting){
if(Northing == 0 & Easting == 0){return(NA)}
resultant_angle <- atan2(Easting,Northing)
resultant_angle_degrees <- (180/pi) * resultant_angle
resultant_angle_degrees <- ifelse(resultant_angle_degrees < 0, 360 + resultant_angle_degrees, resultant_angle_degrees)
return(resultant_angle_degrees)}
vectorSum(1,5)
vectorSum(5,1)
?atan2
vectorSum <- function(Northing,Easting){
if(Northing == 0 & Easting == 0){return(NA)}
resultant_angle <- atan2(Northing,Easting)
resultant_angle_degrees <- (180/pi) * resultant_angle
resultant_angle_degrees <- ifelse(resultant_angle_degrees < 0, 360 + resultant_angle_degrees, resultant_angle_degrees)
return(resultant_angle_degrees)}
vectorSum(5,5)
vectorSum(1,5)
vectorSum(5,1)
vectorSum <- function(Northing,Easting){
if(Northing == 0 & Easting == 0){return(NA)}
resultant_angle <- atan2(Northing,Easting)
resultant_angle_degrees <- (180/pi) * resultant_angle
resultant_angle_degrees <- ifelse(resultant_angle_degrees < 0, 360 + resultant_angle_degrees, resultant_angle_degrees)
return(resultant_angle_degrees)}
vectorSum(5,5)
vectorSum(1,5)
vectorSum(-5,5)
#THIS IS FUCKED!!!
vectorSum <- function(Northing,Easting){
if(Northing == 0 & Easting == 0){return(NA)}
resultant_angle <- atan2(Northing,Easting)
resultant_angle_degrees <- (180/pi) * resultant_angle
#resultant_angle_degrees <- ifelse(resultant_angle_degrees < 0, 360 + resultant_angle_degrees, resultant_angle_degrees)
return(resultant_angle_degrees)}
vectorSum(5,5)
vectorSum(-5,5)
vectorSum(-5,-5)
vectorSum(5,-5)
#THIS IS FUCKED!!!
vectorSum <- function(Northing,Easting){
if(Northing == 0 & Easting == 0){return(NA)}
resultant_angle <- atan2(Northing,Easting)
resultant_angle_degrees <- (180/pi) * resultant_angle
resultant_angle_degrees <- ifelse(resultant_angle_degrees < 0, 360 + resultant_angle_degrees, resultant_angle_degrees)
return(resultant_angle_degrees)}
vectorSum(5,5)
vectorSum(-5,5)
vectorSum(-5,-5)
vectorSum(5,-5)
test <- mapply(vectorSum,modeldat$UVEL,modeldat$VVEL)
#THIS IS FUCKED!!!
vectorSum <- function(Northing,Easting){
if(Northing == 0 & Easting == 0){return(NA)}
resultant_angle <- atan2(sqrt(Northing^2),sqrt(Easting^2))
resultant_angle_degrees <- (180/pi) * resultant_angle
#resultant_angle_degrees <- ifelse(resultant_angle_degrees < 0, 360 + resultant_angle_degrees, resultant_angle_degrees)
return(resultant_angle_degrees)}
vectorSum(5,5)
vectorSum(-5,5)
vectorSum(-5,-5)
vectorSum(5,-5)
#THIS IS FUCKED!!!
vectorSum <- function(Northing,Easting){
if(Northing == 0 & Easting == 0){return(NA)}
resultant_angle <- atan2(sqrt(Northing^2),sqrt(Easting^2))
resultant_angle_degrees <- (180/pi) * resultant_angle
if(Northing>0 & Easting>0){return(90-resultant_angle)} else
if(Northing<0 & Easting>0){return(90+resultant_angle)} else
if(Northing<0 & Easting<0){return(270-resultant_angle)} else
if(Northing>0 & Easting<0){return(270+resultant_angle)}
}
vectorSum(5,5)
vectorSum(-5,5)
vectorSum(-5,-5)
vectorSum(5,-5)
vectorSum(5,5)
vectorSum(-5,5)
vectorSum(-5,-5)
vectorSum(5,-5)
#THIS IS FUCKED!!!
vectorSum <- function(Northing,Easting){
if(Northing == 0 & Easting == 0){return(NA)}
resultant_angle <- atan2(sqrt(Northing^2),sqrt(Easting^2))
resultant_angle_degrees <- (180/pi) * resultant_angle
if(Northing>0 & Easting>0){return(90-resultant_angle)} else
if(Northing<0 & Easting>0){return(90+resultant_angle)} else
if(Northing<0 & Easting<0){return(270-resultant_angle)} else
if(Northing>0 & Easting<0){return(270+resultant_angle)}
}
vectorSum(5,5)
vectorSum(-5,5)
vectorSum(-5,-5)
#THIS IS FUCKED!!!
vectorSum <- function(Northing,Easting){
if(Northing == 0 & Easting == 0){return(NA)}
resultant_angle <- atan2(sqrt(Northing^2),sqrt(Easting^2))
resultant_angle_degrees <- (180/pi) * resultant_angle
print(resultant_angle)
if(Northing>0 & Easting>0){return(90-resultant_angle)} else
if(Northing<0 & Easting>0){return(90+resultant_angle)} else
if(Northing<0 & Easting<0){return(270-resultant_angle)} else
if(Northing>0 & Easting<0){return(270+resultant_angle)}
}
vectorSum(5,5)
vectorSum(-5,5)
vectorSum(-5,-5)
vectorSum(5,-5)
Northing <- 5
Easting <- 5
atan2(sqrt(Northing^2),sqrt(Easting^2))
#THIS IS FUCKED!!!
vectorSum <- function(Northing,Easting){
if(Northing == 0 & Easting == 0){return(NA)}
resultant_angle <- atan2(sqrt(Northing^2),sqrt(Easting^2))
resultant_angle_degrees <- (180/pi) * resultant_angle
print(resultant_angle_degrees)
if(Northing>0 & Easting>0){return(90-resultant_angle_degrees)} else
if(Northing<0 & Easting>0){return(90+resultant_angle_degrees)} else
if(Northing<0 & Easting<0){return(270-resultant_angle_degrees)} else
if(Northing>0 & Easting<0){return(270+resultant_angle_degrees)}
}
vectorSum(5,5)
vectorSum(-5,5)
vectorSum(-5,-5)
vectorSum(5,-5)
vectorSum(5,1)
vectorSum(1,5)
vectorSum <- function(Northing,Easting){
if(Northing == 0 & Easting == 0){return(NA)}
resultant_angle <- atan2(sqrt(Northing^2),sqrt(Easting^2))
resultant_angle_degrees <- (180/pi) * resultant_angle
if(Northing>0 & Easting>0){return(90-resultant_angle_degrees)} else
if(Northing<0 & Easting>0){return(90+resultant_angle_degrees)} else
if(Northing<0 & Easting<0){return(270-resultant_angle_degrees)} else
if(Northing>0 & Easting<0){return(270+resultant_angle_degrees)}
}
vectorSum(1,5)
vectorSum(-5,5)
vectorSum(-5,-5)
vectorSum(5,-5)
vectorSum(500,-5)
test <- mapply(vectorSum,modeldat$UVEL,modeldat$VVEL)
hist(test,breaks=100)
View(test)
test <- mapply(vectorSum,modeldat$UVEL,modeldat$VVEL)
hist(unlist(test),breaks=100)
vectorSum <- function(Northing,Easting){
if(Northing == 0 & Easting == 0){return(NA)}
resultant_angle <- atan2(sqrt(Northing^2),sqrt(Easting^2))
resultant_angle_degrees <- (180/pi) * resultant_angle
if(Northing>0 & Easting>0){return(90-resultant_angle_degrees)} else
if(Northing<0 & Easting>0){return(90+resultant_angle_degrees)} else
if(Northing<0 & Easting<0){return(270-resultant_angle_degrees)} else
if(Northing>0 & Easting<0){return(270+resultant_angle_degrees)}
}
vectorSum(5,5)
vectorSum(-5,5)
vectorSum(-5,-5)
vectorSum(5,-5)
test <- mapply(vectorSum,modeldat$UVEL,modeldat$VVEL)
hist(unlist(test),breaks=100)
library(ggplot2)
# Function to convert angle and magnitude to x,y coordinates
get_xy <- function(angle, magnitude) {
x <- magnitude * sin(angle)
y <- magnitude * cos(angle)
c(x, y)
}
# Example data
magnitude <- c(2, 3, 4)
angle <- c(30, 60, 90) * (pi/180)
# Convert angle and magnitude to x,y coordinates
coords <- t(sapply(1:length(magnitude), function(i) {
get_xy(angle[i], magnitude[i])
}))
# Plot the lines
ggplot() +
geom_segment(aes(x = 0, y = 0, xend = coords[,1], yend = coords[,2]),
color = "red") +
coord_fixed() +
xlim(-5, 5) +
ylim(-5, 5) +
theme_void()
library(ggplot2)
library(grid)
# Function to convert angle and magnitude to x,y coordinates
get_xy <- function(angle, magnitude) {
angle_rad <- angle * (pi/180)
x <- magnitude * sin(angle_rad)
y <- magnitude * cos(angle_rad)
c(x, y)
}
# Function to add arrowheads to lines
add_arrowheads <- function(plot) {
x_ends <- plot$data[[1]]$xend
y_ends <- plot$data[[1]]$yend
plot + annotate("segment", x = x_ends, y = y_ends, xend = x_ends, yend = y_ends,
arrow = arrow(length = unit(0.05, "npc")))
}
View(modeldatLAND)
vectorSum <- function(Northing,Easting){
if(Northing == 0 & Easting == 0){return(NA)}
resultantMagnitude <- sqrt(Northing^2+Easting^2)
return(resultantMagnitude)}
vectorSum(1,2)
vectorSum(4,5)
test <- mapply(vectorSum,modeldat$UVEL,modeldat$VVEL)
hist(test)
Magnitudes <- mapply(vectorSum,modeldat$UVEL,modeldat$VVEL)
Angles <- mapply(vectorAngle,modeldat$UVEL,modeldat$VVEL)
#First the angle
vectorAngle <- function(Northing,Easting){
if(Northing == 0 & Easting == 0){return(NA)}
resultant_angle <- atan2(sqrt(Northing^2),sqrt(Easting^2))
resultant_angle_degrees <- (180/pi) * resultant_angle
if(Northing>0 & Easting>0){return(90-resultant_angle_degrees)} else
if(Northing<0 & Easting>0){return(90+resultant_angle_degrees)} else
if(Northing<0 & Easting<0){return(270-resultant_angle_degrees)} else
if(Northing>0 & Easting<0){return(270+resultant_angle_degrees)}
}
Angles <- mapply(vectorAngle,modeldat$UVEL,modeldat$VVEL)
# Convert angle and magnitude to x,y coordinates
coords <- t(sapply(1:length(Magnitudes), function(i) {
get_xy(Angles[i], Magnitudes[i])
}))
unlist(Angles)
test2 <- as.data.frame(Magnitudes,Angles)
View(test2)
Angles <- unlist(mapply(vectorAngle,modeldat$UVEL,modeldat$VVEL))
# Function to convert angle and magnitude to x,y coordinates
get_xy <- function(angle, magnitude) {
angle_rad <- angle * (pi/180)
x <- magnitude * sin(angle_rad)
y <- magnitude * cos(angle_rad)
c(x, y)
}
# Function to add arrowheads to lines
add_arrowheads <- function(plot) {
x_ends <- plot$data[[1]]$xend
y_ends <- plot$data[[1]]$yend
plot + annotate("segment", x = x_ends, y = y_ends, xend = x_ends, yend = y_ends,
arrow = arrow(length = unit(0.05, "npc")))
}
# Example data
magnitude <- c(2, 3, 4)
angle <- c(30, 60, 90)
test2 <- as.data.frame(Magnitudes,Angles)
library(ggplot2)
library(grid)
# Function to convert angle and magnitude to x,y coordinates
get_xy <- function(angle, magnitude) {
angle_rad <- angle * (pi/180)
x <- magnitude * sin(angle_rad)
y <- magnitude * cos(angle_rad)
c(x, y)
}
# Function to add arrowheads to lines
add_arrowheads <- function(plot) {
x_ends <- plot$data[[1]]$xend
y_ends <- plot$data[[1]]$yend
plot + annotate("segment", x = x_ends, y = y_ends, xend = x_ends, yend = y_ends,
arrow = arrow(length = unit(0.05, "npc")))
}
# Example data
magnitude <- c(2, 3, 4)
angle <- c(30, 60, 90)
# Convert angle and magnitude to x,y coordinates
coords <- t(sapply(1:length(magnitude), function(i) {
get_xy(angle[i], magnitude[i])
}))
# Plot the lines with arrowheads
add_arrowheads(ggplot() +
geom_segment(aes(x = 0, y = 0, xend = coords[,1], yend = coords[,2]),
color = "red") +
coord_fixed() +
xlim(-5, 5) +
ylim(-5, 5) +
theme_void())
library(ggplot2)
library(grid)
# Function to convert angle and magnitude to x,y coordinates
get_xy <- function(angle, magnitude) {
angle_rad <- angle * (pi/180)
x <- magnitude * sin(angle_rad)
y <- magnitude * cos(angle_rad)
c(x, y)
}
# Function to add arrowheads to lines
add_arrowheads <- function(plot) {
x_ends <- plot$data[[1]]$xend
y_ends <- plot$data[[1]]$yend
plot + annotate("segment", x = x_ends, y = y_ends, xend = x_ends, yend = y_ends,
arrow = arrow(length = unit(0.05, "npc")))
}
# Example data
magnitude <- c(2, 3, 4)
angle <- c(30, 60, 90)
# Convert angle and magnitude to x,y coordinates
coords <- t(sapply(1:length(magnitude), function(i) {
get_xy(angle[i], magnitude[i])
}))
# Plot the lines with arrowheads
add_arrowheads(ggplot() +
geom_segment(aes(x = 0, y = 0, xend = coords[,1], yend = coords[,2]),
color = "red") +
coord_fixed() +
xlim(-5, 5) +
ylim(-5, 5) +
theme_void())
dev.off()
# Plot the lines with arrowheads
ggplot() +
geom_segment(aes(x = 0, y = 0, xend = coords[,1], yend = coords[,2]),
color = "red") +
coord_fixed() +
xlim(-5, 5) +
ylim(-5, 5) +
theme_void()
