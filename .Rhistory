points(predictedData$x.GeoG[predictedData$z.OceR==-0.38],
predictedData$fit[predictedData$z.OceR==-0.38]+1.96*(predictedData$se.fit[predictedData$z.OceR==0.38]),
type="l",col="red",lwd=2,lty=2)
points(predictedData$x.GeoG[predictedData$z.OceR==-0.38],
predictedData$fit[predictedData$z.OceR==-0.38]-1.96*(predictedData$se.fit[predictedData$z.OceR==0.38]),
type="l",col="red",lwd=2,lty=2)
points(geographicDistance.pair.No0$value,
eDNAdistance.pair.mod.No0$value,
col=my_colours[findInterval(oceanResistance.pair.No0$value, seq(-0.38, 0.38, length.out = 100))],
pch=16,cex=0.8)
predictedData <- cbind(predictedData,predict(modelPredict,predictedData,se.fit = TRUE))
predictedData$lwr <- predictedData$fit-1.96*predictedData$se.fit
predictedData$upr <- predictedData$fit+1.96*predictedData$se.fit
polygon(x = c(predictedData$x.GeoG[predictedData$z.OceR==0.38],
rev(predictedData$x.GeoG[predictedData$z.OceR==0.38])),
y = c(predictedData$lwr[predictedData$z.OceR==-0.38],
rev(predictedData$upr[predictedData$z.OceR==-0.38])),
col =  adjustcolor("blue", alpha.f = 0.10), border = NA)
points(predictedData$x.GeoG[predictedData$z.OceR==-0.38],
predictedData$fit[predictedData$z.OceR==-0.38],
type="l",col="red",lwd=2)
points(predictedData$x.GeoG[predictedData$z.OceR==-0.38],
predictedData$fit[predictedData$z.OceR==-0.38]+1.96*(predictedData$se.fit[predictedData$z.OceR==0.38]),
type="l",col="red",lwd=2,lty=2)
points(predictedData$x.GeoG[predictedData$z.OceR==-0.38],
predictedData$fit[predictedData$z.OceR==-0.38]-1.96*(predictedData$se.fit[predictedData$z.OceR==0.38]),
type="l",col="red",lwd=2,lty=2)
polygon(x = c(predictedData$x.GeoG[predictedData$z.OceR==0.38],
rev(predictedData$x.GeoG[predictedData$z.OceR==0.38])),
y = c(predictedData$lwr[predictedData$z.OceR==0.38],
rev(predictedData$upr[predictedData$z.OceR==-0.38])),
col =  adjustcolor("blue", alpha.f = 0.10), border = NA)
polygon(x = c(predictedData$x.GeoG[predictedData$z.OceR==-0.38],
rev(predictedData$x.GeoG[predictedData$z.OceR==-0.38])),
y = c(predictedData$lwr[predictedData$z.OceR==-0.38],
rev(predictedData$upr[predictedData$z.OceR==-0.38])),
col =  adjustcolor("red", alpha.f = 0.10), border = NA)
plot(geographicDistance.pair.No0$value,
eDNAdistance.pair.mod.No0$value,
pch=16, cex=0.95)
polygon(x = c(predictedData$x.GeoG[predictedData$z.OceR==0.38],
rev(predictedData$x.GeoG[predictedData$z.OceR==0.38])),
y = c(predictedData$lwr[predictedData$z.OceR==0.38],
rev(predictedData$upr[predictedData$z.OceR==0.38])),
col =  adjustcolor("blue", alpha.f = 0.10), border = NA)
points(predictedData$x.GeoG[predictedData$z.OceR==0.38],
predictedData$fit[predictedData$z.OceR==0.38],
type="l",col="blue",lwd=2)
polygon(x = c(predictedData$x.GeoG[predictedData$z.OceR==-0.38],
rev(predictedData$x.GeoG[predictedData$z.OceR==-0.38])),
y = c(predictedData$lwr[predictedData$z.OceR==-0.38],
rev(predictedData$upr[predictedData$z.OceR==-0.38])),
col =  adjustcolor("red", alpha.f = 0.10), border = NA)
points(predictedData$x.GeoG[predictedData$z.OceR==-0.38],
predictedData$fit[predictedData$z.OceR==-0.38],
type="l",col="red",lwd=2)
points(geographicDistance.pair.No0$value,
eDNAdistance.pair.mod.No0$value,
col=my_colours[findInterval(oceanResistance.pair.No0$value, seq(-0.38, 0.38, length.out = 100))],
pch=16,cex=0.8)
pdf("figures/DistDecayV2.pdf",width = 7,height = 5)
par(mar=c(4.1, 4.1, 2.1, 6.1))
plot(geographicDistance.pair.No0$value,
eDNAdistance.pair.mod.No0$value,
pch=16, cex=0.95)
polygon(x = c(predictedData$x.GeoG[predictedData$z.OceR==0.38],
rev(predictedData$x.GeoG[predictedData$z.OceR==0.38])),
y = c(predictedData$lwr[predictedData$z.OceR==0.38],
rev(predictedData$upr[predictedData$z.OceR==0.38])),
col =  adjustcolor("blue", alpha.f = 0.10), border = NA)
points(predictedData$x.GeoG[predictedData$z.OceR==0.38],
predictedData$fit[predictedData$z.OceR==0.38],
type="l",col="blue",lwd=2)
polygon(x = c(predictedData$x.GeoG[predictedData$z.OceR==-0.38],
rev(predictedData$x.GeoG[predictedData$z.OceR==-0.38])),
y = c(predictedData$lwr[predictedData$z.OceR==-0.38],
rev(predictedData$upr[predictedData$z.OceR==-0.38])),
col =  adjustcolor("red", alpha.f = 0.10), border = NA)
points(predictedData$x.GeoG[predictedData$z.OceR==-0.38],
predictedData$fit[predictedData$z.OceR==-0.38],
type="l",col="red",lwd=2)
points(geographicDistance.pair.No0$value,
eDNAdistance.pair.mod.No0$value,
col=my_colours[findInterval(oceanResistance.pair.No0$value, seq(-0.38, 0.38, length.out = 100))],
pch=16,cex=0.8)
dev.off()
pdf("figures/DistDecayV2.pdf",width = 9,height = 6.5)
par(mar=c(4.1, 4.1, 2.1, 6.1))
plot(geographicDistance.pair.No0$value,
eDNAdistance.pair.mod.No0$value,
pch=16, cex=0.95)
polygon(x = c(predictedData$x.GeoG[predictedData$z.OceR==0.38],
rev(predictedData$x.GeoG[predictedData$z.OceR==0.38])),
y = c(predictedData$lwr[predictedData$z.OceR==0.38],
rev(predictedData$upr[predictedData$z.OceR==0.38])),
col =  adjustcolor("blue", alpha.f = 0.10), border = NA)
points(predictedData$x.GeoG[predictedData$z.OceR==0.38],
predictedData$fit[predictedData$z.OceR==0.38],
type="l",col="blue",lwd=2)
polygon(x = c(predictedData$x.GeoG[predictedData$z.OceR==-0.38],
rev(predictedData$x.GeoG[predictedData$z.OceR==-0.38])),
y = c(predictedData$lwr[predictedData$z.OceR==-0.38],
rev(predictedData$upr[predictedData$z.OceR==-0.38])),
col =  adjustcolor("red", alpha.f = 0.10), border = NA)
points(predictedData$x.GeoG[predictedData$z.OceR==-0.38],
predictedData$fit[predictedData$z.OceR==-0.38],
type="l",col="red",lwd=2)
points(geographicDistance.pair.No0$value,
eDNAdistance.pair.mod.No0$value,
col=my_colours[findInterval(oceanResistance.pair.No0$value, seq(-0.38, 0.38, length.out = 100))],
pch=16,cex=0.8)
dev.off()
plot(geographicDistance.pair.No0$value/1000,
eDNAdistance.pair.mod.No0$value,
pch=16, cex=0.95,
xlab="Geographic Distance (km)",
ylab="Jaccard Dissimilarity")
polygon(x = c(predictedData$x.GeoG[predictedData$z.OceR==0.38],
rev(predictedData$x.GeoG[predictedData$z.OceR==0.38]))/1000,
y = c(predictedData$lwr[predictedData$z.OceR==0.38],
rev(predictedData$upr[predictedData$z.OceR==0.38])),
col =  adjustcolor("blue", alpha.f = 0.10), border = NA)
points(predictedData$x.GeoG[predictedData$z.OceR==0.38],
predictedData$fit[predictedData$z.OceR==0.38]/1000,
type="l",col="blue",lwd=2)
polygon(x = c(predictedData$x.GeoG[predictedData$z.OceR==-0.38],
rev(predictedData$x.GeoG[predictedData$z.OceR==-0.38]))/1000,
y = c(predictedData$lwr[predictedData$z.OceR==-0.38],
rev(predictedData$upr[predictedData$z.OceR==-0.38])),
col =  adjustcolor("red", alpha.f = 0.10), border = NA)
points(predictedData$x.GeoG[predictedData$z.OceR==-0.38]/1000,
predictedData$fit[predictedData$z.OceR==-0.38],
type="l",col="red",lwd=2)
points(geographicDistance.pair.No0$value/1000,
eDNAdistance.pair.mod.No0$value,
col=my_colours[findInterval(oceanResistance.pair.No0$value, seq(-0.38, 0.38, length.out = 100))],
pch=16,cex=0.8)
dev.off()
pdf("figures/DistDecayV2.pdf",width = 9,height = 6.5)
par(mar=c(4.1, 4.1, 2.1, 6.1))
plot(geographicDistance.pair.No0$value/1000,
eDNAdistance.pair.mod.No0$value,
pch=16, cex=0.95,
xlab="Geographic Distance (km)",
ylab="Jaccard Dissimilarity")
polygon(x = c(predictedData$x.GeoG[predictedData$z.OceR==0.38],
rev(predictedData$x.GeoG[predictedData$z.OceR==0.38]))/1000,
y = c(predictedData$lwr[predictedData$z.OceR==0.38],
rev(predictedData$upr[predictedData$z.OceR==0.38])),
col =  adjustcolor("blue", alpha.f = 0.10), border = NA)
points(predictedData$x.GeoG[predictedData$z.OceR==0.38],
predictedData$fit[predictedData$z.OceR==0.38]/1000,
type="l",col="blue",lwd=2)
polygon(x = c(predictedData$x.GeoG[predictedData$z.OceR==-0.38],
rev(predictedData$x.GeoG[predictedData$z.OceR==-0.38]))/1000,
y = c(predictedData$lwr[predictedData$z.OceR==-0.38],
rev(predictedData$upr[predictedData$z.OceR==-0.38])),
col =  adjustcolor("red", alpha.f = 0.10), border = NA)
points(predictedData$x.GeoG[predictedData$z.OceR==-0.38]/1000,
predictedData$fit[predictedData$z.OceR==-0.38],
type="l",col="red",lwd=2)
points(geographicDistance.pair.No0$value/1000,
eDNAdistance.pair.mod.No0$value,
col=my_colours[findInterval(oceanResistance.pair.No0$value, seq(-0.38, 0.38, length.out = 100))],
pch=16,cex=0.8)
dev.off()
plot(geographicDistance.pair.No0$value/1000,
eDNAdistance.pair.mod.No0$value,
pch=16, cex=0.95,
xlab="Geographic Distance (km)",
ylab="Jaccard Dissimilarity")
polygon(x = c(predictedData$x.GeoG[predictedData$z.OceR==0.38],
rev(predictedData$x.GeoG[predictedData$z.OceR==0.38]))/1000,
y = c(predictedData$lwr[predictedData$z.OceR==0.38],
rev(predictedData$upr[predictedData$z.OceR==0.38])),
col =  adjustcolor("blue", alpha.f = 0.10), border = NA)
points(predictedData$x.GeoG[predictedData$z.OceR==0.38],
predictedData$fit[predictedData$z.OceR==0.38]/1000,
type="l",col="blue",lwd=2)
pdf("figures/DistDecayV2.pdf",width = 9,height = 6.5)
par(mar=c(4.1, 4.1, 2.1, 6.1))
plot(geographicDistance.pair.No0$value/1000,
eDNAdistance.pair.mod.No0$value,
pch=16, cex=0.95,
xlab="Geographic Distance (km)",
ylab="Jaccard Dissimilarity")
polygon(x = c(predictedData$x.GeoG[predictedData$z.OceR==0.38],
rev(predictedData$x.GeoG[predictedData$z.OceR==0.38]))/1000,
y = c(predictedData$lwr[predictedData$z.OceR==0.38],
rev(predictedData$upr[predictedData$z.OceR==0.38])),
col =  adjustcolor("blue", alpha.f = 0.10), border = NA)
points(predictedData$x.GeoG[predictedData$z.OceR==0.38]/1000,
predictedData$fit[predictedData$z.OceR==0.38],
type="l",col="blue",lwd=2)
polygon(x = c(predictedData$x.GeoG[predictedData$z.OceR==-0.38],
rev(predictedData$x.GeoG[predictedData$z.OceR==-0.38]))/1000,
y = c(predictedData$lwr[predictedData$z.OceR==-0.38],
rev(predictedData$upr[predictedData$z.OceR==-0.38])),
col =  adjustcolor("red", alpha.f = 0.10), border = NA)
points(predictedData$x.GeoG[predictedData$z.OceR==-0.38]/1000,
predictedData$fit[predictedData$z.OceR==-0.38],
type="l",col="red",lwd=2)
points(geographicDistance.pair.No0$value/1000,
eDNAdistance.pair.mod.No0$value,
col=my_colours[findInterval(oceanResistance.pair.No0$value, seq(-0.38, 0.38, length.out = 100))],
pch=16,cex=0.8)
dev.off()
pdf("figures/DistDecayV2.pdf",width = 9,height = 6.5)
par(mar=c(4.1, 4.1, 2.1, 6.1))
plot(geographicDistance.pair.No0$value/1000,
eDNAdistance.pair.mod.No0$value,
pch=16, cex=0.95,
xlab="Geographic Distance (km)",
ylab="Jaccard Dissimilarity")
polygon(x = c(predictedData$x.GeoG[predictedData$z.OceR==0.38],
rev(predictedData$x.GeoG[predictedData$z.OceR==0.38]))/1000,
y = c(predictedData$lwr[predictedData$z.OceR==0.38],
rev(predictedData$upr[predictedData$z.OceR==0.38])),
col =  adjustcolor("blue", alpha.f = 0.10), border = NA)
points(predictedData$x.GeoG[predictedData$z.OceR==0.38]/1000,
predictedData$fit[predictedData$z.OceR==0.38],
type="l",col="blue",lwd=2)
polygon(x = c(predictedData$x.GeoG[predictedData$z.OceR==-0.38],
rev(predictedData$x.GeoG[predictedData$z.OceR==-0.38]))/1000,
y = c(predictedData$lwr[predictedData$z.OceR==-0.38],
rev(predictedData$upr[predictedData$z.OceR==-0.38])),
col =  adjustcolor("red", alpha.f = 0.10), border = NA)
points(predictedData$x.GeoG[predictedData$z.OceR==-0.38]/1000,
predictedData$fit[predictedData$z.OceR==-0.38],
type="l",col="red",lwd=2)
points(geographicDistance.pair.No0$value/1000,
eDNAdistance.pair.mod.No0$value,
col=my_colours[findInterval(oceanResistance.pair.No0$value, seq(-0.38, 0.38, length.out = 100))],
pch=16,cex=0.8)
legend_image <- as.raster(matrix(my_palette(100), ncol=1))
rasterImage(legend_image, 350, 0.60, 360,0.75,xpd=T)
text(x=353, y = seq(0.6,0.75,l=5), labels = paste0("-  ",seq(-0.38,0.38,l=5)),xpd=T,pos = 4,cex=0.7)
dev.off()
pdf("figures/DistDecayV2.pdf",width = 9,height = 6.5)
par(mar=c(4.1, 4.1, 2.1, 6.1))
plot(geographicDistance.pair.No0$value/1000,
eDNAdistance.pair.mod.No0$value,
pch=16, cex=0.95,
xlab="Geographic Distance (km)",
ylab="Jaccard Dissimilarity")
polygon(x = c(predictedData$x.GeoG[predictedData$z.OceR==0.38],
rev(predictedData$x.GeoG[predictedData$z.OceR==0.38]))/1000,
y = c(predictedData$lwr[predictedData$z.OceR==0.38],
rev(predictedData$upr[predictedData$z.OceR==0.38])),
col =  adjustcolor("blue", alpha.f = 0.10), border = NA)
points(predictedData$x.GeoG[predictedData$z.OceR==0.38]/1000,
predictedData$fit[predictedData$z.OceR==0.38],
type="l",col="blue",lwd=2)
polygon(x = c(predictedData$x.GeoG[predictedData$z.OceR==-0.38],
rev(predictedData$x.GeoG[predictedData$z.OceR==-0.38]))/1000,
y = c(predictedData$lwr[predictedData$z.OceR==-0.38],
rev(predictedData$upr[predictedData$z.OceR==-0.38])),
col =  adjustcolor("red", alpha.f = 0.10), border = NA)
points(predictedData$x.GeoG[predictedData$z.OceR==-0.38]/1000,
predictedData$fit[predictedData$z.OceR==-0.38],
type="l",col="red",lwd=2)
points(geographicDistance.pair.No0$value/1000,
eDNAdistance.pair.mod.No0$value,
col=my_colours[findInterval(oceanResistance.pair.No0$value, seq(-0.38, 0.38, length.out = 100))],
pch=16,cex=0.8)
legend_image <- as.raster(matrix(my_palette(100), ncol=1))
rasterImage(legend_image, 330, 0.40, 340,0.6,xpd=T)
text(x=353, y = seq(0.6,0.75,l=5), labels = paste0("-  ",seq(-0.38,0.38,l=5)),xpd=T,pos = 4,cex=0.7)
dev.off()
plot(geographicDistance.pair.No0$value/1000,
eDNAdistance.pair.mod.No0$value,
pch=16, cex=0.95,
xlab="Geographic Distance (km)",
ylab="Jaccard Dissimilarity")
polygon(x = c(predictedData$x.GeoG[predictedData$z.OceR==0.38],
rev(predictedData$x.GeoG[predictedData$z.OceR==0.38]))/1000,
y = c(predictedData$lwr[predictedData$z.OceR==0.38],
rev(predictedData$upr[predictedData$z.OceR==0.38])),
col =  adjustcolor("blue", alpha.f = 0.10), border = NA)
points(predictedData$x.GeoG[predictedData$z.OceR==0.38]/1000,
predictedData$fit[predictedData$z.OceR==0.38],
type="l",col="blue",lwd=2)
polygon(x = c(predictedData$x.GeoG[predictedData$z.OceR==-0.38],
rev(predictedData$x.GeoG[predictedData$z.OceR==-0.38]))/1000,
y = c(predictedData$lwr[predictedData$z.OceR==-0.38],
rev(predictedData$upr[predictedData$z.OceR==-0.38])),
col =  adjustcolor("red", alpha.f = 0.10), border = NA)
points(predictedData$x.GeoG[predictedData$z.OceR==-0.38]/1000,
predictedData$fit[predictedData$z.OceR==-0.38],
type="l",col="red",lwd=2)
points(geographicDistance.pair.No0$value/1000,
eDNAdistance.pair.mod.No0$value,
col=my_colours[findInterval(oceanResistance.pair.No0$value, seq(-0.38, 0.38, length.out = 100))],
pch=16,cex=0.8)
legend_image <- as.raster(matrix(my_palette(100), ncol=1))
rasterImage(legend_image, 330, 0.40, 340,0.6,xpd=T)
text(x=353, y = seq(0.4,0.6,l=5), labels = paste0("-  ",seq(-0.38,0.38,l=5)),xpd=T,pos = 4,cex=0.7)
par(mar=c(4.1, 4.1, 2.1, 6.1))
plot(geographicDistance.pair.No0$value/1000,
eDNAdistance.pair.mod.No0$value,
pch=16, cex=0.95,
xlab="Geographic Distance (km)",
ylab="Jaccard Dissimilarity")
polygon(x = c(predictedData$x.GeoG[predictedData$z.OceR==0.38],
rev(predictedData$x.GeoG[predictedData$z.OceR==0.38]))/1000,
y = c(predictedData$lwr[predictedData$z.OceR==0.38],
rev(predictedData$upr[predictedData$z.OceR==0.38])),
col =  adjustcolor("blue", alpha.f = 0.10), border = NA)
points(predictedData$x.GeoG[predictedData$z.OceR==0.38]/1000,
predictedData$fit[predictedData$z.OceR==0.38],
type="l",col="blue",lwd=2)
polygon(x = c(predictedData$x.GeoG[predictedData$z.OceR==-0.38],
rev(predictedData$x.GeoG[predictedData$z.OceR==-0.38]))/1000,
y = c(predictedData$lwr[predictedData$z.OceR==-0.38],
rev(predictedData$upr[predictedData$z.OceR==-0.38])),
col =  adjustcolor("red", alpha.f = 0.10), border = NA)
points(predictedData$x.GeoG[predictedData$z.OceR==-0.38]/1000,
predictedData$fit[predictedData$z.OceR==-0.38],
type="l",col="red",lwd=2)
points(geographicDistance.pair.No0$value/1000,
eDNAdistance.pair.mod.No0$value,
col=my_colours[findInterval(oceanResistance.pair.No0$value, seq(-0.38, 0.38, length.out = 100))],
pch=16,cex=0.8)
legend_image <- as.raster(matrix(my_palette(100), ncol=1))
rasterImage(legend_image, 330, 0.40, 340,0.6,xpd=T)
text(x=353, y = seq(0.4,0.6,l=5), labels = paste0("-  ",seq(-0.38,0.38,l=5)),xpd=T,pos = 4,cex=0.7)
text(x=333, y = seq(0.4,0.6,l=5), labels = paste0("-  ",seq(-0.38,0.38,l=5)),xpd=T,pos = 4,cex=0.7)
pdf("figures/DistDecayV2.pdf",width = 9,height = 6.5)
par(mar=c(4.1, 4.1, 2.1, 6.1))
plot(geographicDistance.pair.No0$value/1000,
eDNAdistance.pair.mod.No0$value,
pch=16, cex=0.95,
xlab="Geographic Distance (km)",
ylab="Jaccard Dissimilarity")
polygon(x = c(predictedData$x.GeoG[predictedData$z.OceR==0.38],
rev(predictedData$x.GeoG[predictedData$z.OceR==0.38]))/1000,
y = c(predictedData$lwr[predictedData$z.OceR==0.38],
rev(predictedData$upr[predictedData$z.OceR==0.38])),
col =  adjustcolor("blue", alpha.f = 0.10), border = NA)
points(predictedData$x.GeoG[predictedData$z.OceR==0.38]/1000,
predictedData$fit[predictedData$z.OceR==0.38],
type="l",col="blue",lwd=2)
polygon(x = c(predictedData$x.GeoG[predictedData$z.OceR==-0.38],
rev(predictedData$x.GeoG[predictedData$z.OceR==-0.38]))/1000,
y = c(predictedData$lwr[predictedData$z.OceR==-0.38],
rev(predictedData$upr[predictedData$z.OceR==-0.38])),
col =  adjustcolor("red", alpha.f = 0.10), border = NA)
points(predictedData$x.GeoG[predictedData$z.OceR==-0.38]/1000,
predictedData$fit[predictedData$z.OceR==-0.38],
type="l",col="red",lwd=2)
points(geographicDistance.pair.No0$value/1000,
eDNAdistance.pair.mod.No0$value,
col=my_colours[findInterval(oceanResistance.pair.No0$value, seq(-0.38, 0.38, length.out = 100))],
pch=16,cex=0.8)
legend_image <- as.raster(matrix(my_palette(100), ncol=1))
rasterImage(legend_image, 330, 0.40, 340,0.6,xpd=T)
text(x=333, y = seq(0.4,0.6,l=5), labels = paste0("-  ",seq(-0.38,0.38,l=5)),xpd=T,pos = 4,cex=0.7)
dev.off()
plot(geographicDistance.pair.No0$value/1000,
eDNAdistance.pair.mod.No0$value,
pch=16, cex=0.95,
xlab="Geographic Distance (km)",
ylab="Jaccard Dissimilarity")
polygon(x = c(predictedData$x.GeoG[predictedData$z.OceR==0.38],
rev(predictedData$x.GeoG[predictedData$z.OceR==0.38]))/1000,
y = c(predictedData$lwr[predictedData$z.OceR==0.38],
rev(predictedData$upr[predictedData$z.OceR==0.38])),
col =  adjustcolor("blue", alpha.f = 0.10), border = NA)
points(predictedData$x.GeoG[predictedData$z.OceR==0.38]/1000,
predictedData$fit[predictedData$z.OceR==0.38],
type="l",col=adjustcolor("blue", alpha.f = 0.30),lwd=2)
polygon(x = c(predictedData$x.GeoG[predictedData$z.OceR==-0.38],
rev(predictedData$x.GeoG[predictedData$z.OceR==-0.38]))/1000,
y = c(predictedData$lwr[predictedData$z.OceR==-0.38],
rev(predictedData$upr[predictedData$z.OceR==-0.38])),
col =  adjustcolor("red", alpha.f = 0.10), border = NA)
points(predictedData$x.GeoG[predictedData$z.OceR==-0.38]/1000,
predictedData$fit[predictedData$z.OceR==-0.38],
type="l",col=adjustcolor("red", alpha.f = 0.30),lwd=2)
points(geographicDistance.pair.No0$value/1000,
eDNAdistance.pair.mod.No0$value,
col=my_colours[findInterval(oceanResistance.pair.No0$value, seq(-0.38, 0.38, length.out = 100))],
pch=16,cex=0.8)
pdf("figures/DistDecayV2.pdf",width = 9,height = 6.5)
par(mar=c(4.1, 4.1, 2.1, 6.1))
plot(geographicDistance.pair.No0$value/1000,
eDNAdistance.pair.mod.No0$value,
pch=16, cex=0.95,
xlab="Geographic Distance (km)",
ylab="Jaccard Dissimilarity")
polygon(x = c(predictedData$x.GeoG[predictedData$z.OceR==0.38],
rev(predictedData$x.GeoG[predictedData$z.OceR==0.38]))/1000,
y = c(predictedData$lwr[predictedData$z.OceR==0.38],
rev(predictedData$upr[predictedData$z.OceR==0.38])),
col =  adjustcolor("blue", alpha.f = 0.10), border = NA)
points(predictedData$x.GeoG[predictedData$z.OceR==0.38]/1000,
predictedData$fit[predictedData$z.OceR==0.38],
type="l",col=adjustcolor("blue", alpha.f = 0.30),lwd=2)
polygon(x = c(predictedData$x.GeoG[predictedData$z.OceR==-0.38],
rev(predictedData$x.GeoG[predictedData$z.OceR==-0.38]))/1000,
y = c(predictedData$lwr[predictedData$z.OceR==-0.38],
rev(predictedData$upr[predictedData$z.OceR==-0.38])),
col =  adjustcolor("red", alpha.f = 0.10), border = NA)
points(predictedData$x.GeoG[predictedData$z.OceR==-0.38]/1000,
predictedData$fit[predictedData$z.OceR==-0.38],
type="l",col=adjustcolor("red", alpha.f = 0.30),lwd=2)
points(geographicDistance.pair.No0$value/1000,
eDNAdistance.pair.mod.No0$value,
col=my_colours[findInterval(oceanResistance.pair.No0$value, seq(-0.38, 0.38, length.out = 100))],
pch=16,cex=0.8)
legend_image <- as.raster(matrix(my_palette(100), ncol=1))
rasterImage(legend_image, 330, 0.40, 340,0.6,xpd=T)
text(x=333, y = seq(0.4,0.6,l=5), labels = paste0("-  ",seq(-0.38,0.38,l=5)),xpd=T,pos = 4,cex=0.7)
dev.off()
pdf("figures/DistDecayV2.pdf",width = 9,height = 6.5)
par(mar=c(4.1, 4.1, 2.1, 6.1))
plot(geographicDistance.pair.No0$value/1000,
eDNAdistance.pair.mod.No0$value,
pch=16, cex=0.95,
xlab="Geographic Distance (km)",
ylab="Jaccard Dissimilarity")
polygon(x = c(predictedData$x.GeoG[predictedData$z.OceR==0.38],
rev(predictedData$x.GeoG[predictedData$z.OceR==0.38]))/1000,
y = c(predictedData$lwr[predictedData$z.OceR==0.38],
rev(predictedData$upr[predictedData$z.OceR==0.38])),
col =  adjustcolor("blue", alpha.f = 0.10), border = NA)
points(predictedData$x.GeoG[predictedData$z.OceR==0.38]/1000,
predictedData$fit[predictedData$z.OceR==0.38],
type="l",col=adjustcolor("blue", alpha.f = 0.30),lwd=2)
polygon(x = c(predictedData$x.GeoG[predictedData$z.OceR==-0.38],
rev(predictedData$x.GeoG[predictedData$z.OceR==-0.38]))/1000,
y = c(predictedData$lwr[predictedData$z.OceR==-0.38],
rev(predictedData$upr[predictedData$z.OceR==-0.38])),
col =  adjustcolor("red", alpha.f = 0.10), border = NA)
points(predictedData$x.GeoG[predictedData$z.OceR==-0.38]/1000,
predictedData$fit[predictedData$z.OceR==-0.38],
type="l",col=adjustcolor("red", alpha.f = 0.30),lwd=2)
points(geographicDistance.pair.No0$value/1000,
eDNAdistance.pair.mod.No0$value,
col=my_colours[findInterval(oceanResistance.pair.No0$value, seq(-0.38, 0.38, length.out = 100))],
pch=16,cex=0.8)
legend_image <- as.raster(matrix(my_palette(100), ncol=1))
rasterImage(legend_image, 330, 0.40, 340,0.6,xpd=T)
text(x=333, y = seq(0.4,0.6,l=5), labels = paste0("-  ",seq(-0.38,0.38,l=5)),xpd=T,pos = 4,cex=0.7)
dev.off()
View(predictedData)
pdf("figures/DistDecayV2.pdf",width = 9,height = 6.5)
par(mar=c(4.1, 4.1, 2.1, 6.1))
plot(geographicDistance.pair.No0$value/1000,
eDNAdistance.pair.mod.No0$value,
pch=16, cex=0.95,
xlab="Geographic Distance (km)",
ylab="Jaccard Dissimilarity")
polygon(x = c(predictedData$x.GeoG[predictedData$z.OceR==0.38],
rev(predictedData$x.GeoG[predictedData$z.OceR==0.38]))/1000,
y = c(predictedData$lwr[predictedData$z.OceR==0.38],
rev(predictedData$upr[predictedData$z.OceR==0.38])),
col =  adjustcolor("blue", alpha.f = 0.10), border = NA)
points(predictedData$x.GeoG[predictedData$z.OceR==0.38]/1000,
predictedData$fit[predictedData$z.OceR==0.38],
type="l",col=adjustcolor("blue", alpha.f = 0.30),lwd=2)
polygon(x = c(predictedData$x.GeoG[predictedData$z.OceR==-0.38],
rev(predictedData$x.GeoG[predictedData$z.OceR==-0.38]))/1000,
y = c(predictedData$lwr[predictedData$z.OceR==-0.38],
rev(predictedData$upr[predictedData$z.OceR==-0.38])),
col =  adjustcolor("red", alpha.f = 0.10), border = NA)
points(predictedData$x.GeoG[predictedData$z.OceR==-0.38]/1000,
predictedData$fit[predictedData$z.OceR==-0.38],
type="l",col=adjustcolor("red", alpha.f = 0.30),lwd=2)
points(geographicDistance.pair.No0$value/1000,
eDNAdistance.pair.mod.No0$value,
col=my_colours[findInterval(oceanResistance.pair.No0$value, seq(-0.38, 0.38, length.out = 100))],
pch=16,cex=0.8)
legend_image <- as.raster(matrix(my_palette(100), ncol=1))
rasterImage(legend_image, 330, 0.40, 340,0.6,xpd=T)
text(x=333, y = seq(0.4,0.6,l=5), labels = paste0("-  ",seq(-0.38,0.38,l=5)),xpd=T,pos = 4,cex=0.7)
dev.off()
legend_image <- as.raster(matrix(rev(my_palette(100), ncol=1)))
legend_image <- as.raster(matrix(rev(my_palette(100)), ncol=1))
rasterImage(legend_image, 330, 0.40, 340,0.6,xpd=T)
text(x=333, y = seq(0.4,0.6,l=5), labels = paste0("-  ",seq(-0.38,0.38,l=5)),xpd=T,pos = 4,cex=0.7)
pdf("figures/DistDecayV2.pdf",width = 9,height = 6.5)
par(mar=c(4.1, 4.1, 2.1, 6.1))
plot(geographicDistance.pair.No0$value/1000,
eDNAdistance.pair.mod.No0$value,
pch=16, cex=0.95,
xlab="Geographic Distance (km)",
ylab="Jaccard Dissimilarity")
polygon(x = c(predictedData$x.GeoG[predictedData$z.OceR==0.38],
rev(predictedData$x.GeoG[predictedData$z.OceR==0.38]))/1000,
y = c(predictedData$lwr[predictedData$z.OceR==0.38],
rev(predictedData$upr[predictedData$z.OceR==0.38])),
col =  adjustcolor("blue", alpha.f = 0.10), border = NA)
points(predictedData$x.GeoG[predictedData$z.OceR==0.38]/1000,
predictedData$fit[predictedData$z.OceR==0.38],
type="l",col=adjustcolor("blue", alpha.f = 0.30),lwd=2)
polygon(x = c(predictedData$x.GeoG[predictedData$z.OceR==-0.38],
rev(predictedData$x.GeoG[predictedData$z.OceR==-0.38]))/1000,
y = c(predictedData$lwr[predictedData$z.OceR==-0.38],
rev(predictedData$upr[predictedData$z.OceR==-0.38])),
col =  adjustcolor("red", alpha.f = 0.10), border = NA)
points(predictedData$x.GeoG[predictedData$z.OceR==-0.38]/1000,
predictedData$fit[predictedData$z.OceR==-0.38],
type="l",col=adjustcolor("red", alpha.f = 0.30),lwd=2)
points(geographicDistance.pair.No0$value/1000,
eDNAdistance.pair.mod.No0$value,
col=my_colours[findInterval(oceanResistance.pair.No0$value, seq(-0.38, 0.38, length.out = 100))],
pch=16,cex=0.8)
legend_image <- as.raster(matrix(rev(my_palette(100)), ncol=1))
rasterImage(legend_image, 330, 0.40, 340,0.6,xpd=T)
text(x=333, y = seq(0.4,0.6,l=5), labels = paste0("-  ",seq(-0.38,0.38,l=5)),xpd=T,pos = 4,cex=0.7)
dev.off()
